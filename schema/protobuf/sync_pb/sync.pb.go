// Code generated by protoc-gen-go. DO NOT EDIT.
// source: sync.proto

package sync_pb

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GarbageCollectionDirective_Type int32

const (
	GarbageCollectionDirective_UNKNOWN                   GarbageCollectionDirective_Type = 0
	GarbageCollectionDirective_VERSION_WATERMARK         GarbageCollectionDirective_Type = 1
	GarbageCollectionDirective_AGE_WATERMARK             GarbageCollectionDirective_Type = 2
	GarbageCollectionDirective_DEPRECATED_MAX_ITEM_COUNT GarbageCollectionDirective_Type = 3 // Deprecated: Do not use.
)

var GarbageCollectionDirective_Type_name = map[int32]string{
	0: "UNKNOWN",
	1: "VERSION_WATERMARK",
	2: "AGE_WATERMARK",
	3: "DEPRECATED_MAX_ITEM_COUNT",
}

var GarbageCollectionDirective_Type_value = map[string]int32{
	"UNKNOWN":                   0,
	"VERSION_WATERMARK":         1,
	"AGE_WATERMARK":             2,
	"DEPRECATED_MAX_ITEM_COUNT": 3,
}

func (x GarbageCollectionDirective_Type) Enum() *GarbageCollectionDirective_Type {
	p := new(GarbageCollectionDirective_Type)
	*p = x
	return p
}

func (x GarbageCollectionDirective_Type) String() string {
	return proto.EnumName(GarbageCollectionDirective_Type_name, int32(x))
}

func (x *GarbageCollectionDirective_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(GarbageCollectionDirective_Type_value, data, "GarbageCollectionDirective_Type")
	if err != nil {
		return err
	}
	*x = GarbageCollectionDirective_Type(value)
	return nil
}

func (GarbageCollectionDirective_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{7, 0}
}

type ClientToServerMessage_Contents int32

const (
	ClientToServerMessage_COMMIT            ClientToServerMessage_Contents = 1
	ClientToServerMessage_GET_UPDATES       ClientToServerMessage_Contents = 2
	ClientToServerMessage_DEPRECATED_3      ClientToServerMessage_Contents = 3
	ClientToServerMessage_DEPRECATED_4      ClientToServerMessage_Contents = 4
	ClientToServerMessage_CLEAR_SERVER_DATA ClientToServerMessage_Contents = 5
)

var ClientToServerMessage_Contents_name = map[int32]string{
	1: "COMMIT",
	2: "GET_UPDATES",
	3: "DEPRECATED_3",
	4: "DEPRECATED_4",
	5: "CLEAR_SERVER_DATA",
}

var ClientToServerMessage_Contents_value = map[string]int32{
	"COMMIT":            1,
	"GET_UPDATES":       2,
	"DEPRECATED_3":      3,
	"DEPRECATED_4":      4,
	"CLEAR_SERVER_DATA": 5,
}

func (x ClientToServerMessage_Contents) Enum() *ClientToServerMessage_Contents {
	p := new(ClientToServerMessage_Contents)
	*p = x
	return p
}

func (x ClientToServerMessage_Contents) String() string {
	return proto.EnumName(ClientToServerMessage_Contents_name, int32(x))
}

func (x *ClientToServerMessage_Contents) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(ClientToServerMessage_Contents_value, data, "ClientToServerMessage_Contents")
	if err != nil {
		return err
	}
	*x = ClientToServerMessage_Contents(value)
	return nil
}

func (ClientToServerMessage_Contents) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{15, 0}
}

type CommitResponse_ResponseType int32

const (
	CommitResponse_SUCCESS  CommitResponse_ResponseType = 1
	CommitResponse_CONFLICT CommitResponse_ResponseType = 2
	// TODO(ncarter): What's the difference between RETRY and TRANSIENT_ERROR?
	CommitResponse_RETRY           CommitResponse_ResponseType = 3
	CommitResponse_INVALID_MESSAGE CommitResponse_ResponseType = 4
	// won't help.
	CommitResponse_OVER_QUOTA      CommitResponse_ResponseType = 5
	CommitResponse_TRANSIENT_ERROR CommitResponse_ResponseType = 6
)

var CommitResponse_ResponseType_name = map[int32]string{
	1: "SUCCESS",
	2: "CONFLICT",
	3: "RETRY",
	4: "INVALID_MESSAGE",
	5: "OVER_QUOTA",
	6: "TRANSIENT_ERROR",
}

var CommitResponse_ResponseType_value = map[string]int32{
	"SUCCESS":         1,
	"CONFLICT":        2,
	"RETRY":           3,
	"INVALID_MESSAGE": 4,
	"OVER_QUOTA":      5,
	"TRANSIENT_ERROR": 6,
}

func (x CommitResponse_ResponseType) Enum() *CommitResponse_ResponseType {
	p := new(CommitResponse_ResponseType)
	*p = x
	return p
}

func (x CommitResponse_ResponseType) String() string {
	return proto.EnumName(CommitResponse_ResponseType_name, int32(x))
}

func (x *CommitResponse_ResponseType) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(CommitResponse_ResponseType_value, data, "CommitResponse_ResponseType")
	if err != nil {
		return err
	}
	*x = CommitResponse_ResponseType(value)
	return nil
}

func (CommitResponse_ResponseType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{18, 0}
}

// Used for inspecting how long we spent performing operations in different
// backends. All times must be in millis.
type ProfilingData struct {
	MetaDataWriteTime    *int64   `protobuf:"varint,1,opt,name=meta_data_write_time,json=metaDataWriteTime" json:"meta_data_write_time,omitempty"`
	FileDataWriteTime    *int64   `protobuf:"varint,2,opt,name=file_data_write_time,json=fileDataWriteTime" json:"file_data_write_time,omitempty"`
	UserLookupTime       *int64   `protobuf:"varint,3,opt,name=user_lookup_time,json=userLookupTime" json:"user_lookup_time,omitempty"`
	MetaDataReadTime     *int64   `protobuf:"varint,4,opt,name=meta_data_read_time,json=metaDataReadTime" json:"meta_data_read_time,omitempty"`
	FileDataReadTime     *int64   `protobuf:"varint,5,opt,name=file_data_read_time,json=fileDataReadTime" json:"file_data_read_time,omitempty"`
	TotalRequestTime     *int64   `protobuf:"varint,6,opt,name=total_request_time,json=totalRequestTime" json:"total_request_time,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ProfilingData) Reset()         { *m = ProfilingData{} }
func (m *ProfilingData) String() string { return proto.CompactTextString(m) }
func (*ProfilingData) ProtoMessage()    {}
func (*ProfilingData) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{0}
}

func (m *ProfilingData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ProfilingData.Unmarshal(m, b)
}
func (m *ProfilingData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ProfilingData.Marshal(b, m, deterministic)
}
func (m *ProfilingData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ProfilingData.Merge(m, src)
}
func (m *ProfilingData) XXX_Size() int {
	return xxx_messageInfo_ProfilingData.Size(m)
}
func (m *ProfilingData) XXX_DiscardUnknown() {
	xxx_messageInfo_ProfilingData.DiscardUnknown(m)
}

var xxx_messageInfo_ProfilingData proto.InternalMessageInfo

func (m *ProfilingData) GetMetaDataWriteTime() int64 {
	if m != nil && m.MetaDataWriteTime != nil {
		return *m.MetaDataWriteTime
	}
	return 0
}

func (m *ProfilingData) GetFileDataWriteTime() int64 {
	if m != nil && m.FileDataWriteTime != nil {
		return *m.FileDataWriteTime
	}
	return 0
}

func (m *ProfilingData) GetUserLookupTime() int64 {
	if m != nil && m.UserLookupTime != nil {
		return *m.UserLookupTime
	}
	return 0
}

func (m *ProfilingData) GetMetaDataReadTime() int64 {
	if m != nil && m.MetaDataReadTime != nil {
		return *m.MetaDataReadTime
	}
	return 0
}

func (m *ProfilingData) GetFileDataReadTime() int64 {
	if m != nil && m.FileDataReadTime != nil {
		return *m.FileDataReadTime
	}
	return 0
}

func (m *ProfilingData) GetTotalRequestTime() int64 {
	if m != nil && m.TotalRequestTime != nil {
		return *m.TotalRequestTime
	}
	return 0
}

type EntitySpecifics struct {
	// If a datatype is encrypted, this field will contain the encrypted
	// original EntitySpecifics. The extension for the datatype will continue
	// to exist, but contain only the default values.
	// Note that currently passwords employ their own legacy encryption scheme and
	// do not use this field.
	Encrypted *EncryptedData `protobuf:"bytes,1,opt,name=encrypted" json:"encrypted,omitempty"`
	// Types that are valid to be assigned to SpecificsVariant:
	//	*EntitySpecifics_Autofill
	//	*EntitySpecifics_Bookmark
	//	*EntitySpecifics_Preference
	//	*EntitySpecifics_TypedUrl
	//	*EntitySpecifics_Theme
	//	*EntitySpecifics_AppNotification
	//	*EntitySpecifics_Password
	//	*EntitySpecifics_Nigori
	//	*EntitySpecifics_Extension
	//	*EntitySpecifics_App
	//	*EntitySpecifics_Session
	//	*EntitySpecifics_AutofillProfile
	//	*EntitySpecifics_SearchEngine
	//	*EntitySpecifics_ExtensionSetting
	//	*EntitySpecifics_AppSetting
	//	*EntitySpecifics_HistoryDeleteDirective
	//	*EntitySpecifics_SyncedNotification
	//	*EntitySpecifics_SyncedNotificationAppInfo
	//	*EntitySpecifics_DeviceInfo
	//	*EntitySpecifics_Experiments
	//	*EntitySpecifics_PriorityPreference
	//	*EntitySpecifics_Dictionary
	//	*EntitySpecifics_FaviconTracking
	//	*EntitySpecifics_FaviconImage
	//	*EntitySpecifics_ManagedUserSetting
	//	*EntitySpecifics_ManagedUser
	//	*EntitySpecifics_ManagedUserSharedSetting
	//	*EntitySpecifics_ManagedUserWhitelist
	//	*EntitySpecifics_AppList
	//	*EntitySpecifics_AutofillWallet
	//	*EntitySpecifics_WalletMetadata
	//	*EntitySpecifics_ArcPackage
	//	*EntitySpecifics_Printer
	//	*EntitySpecifics_ReadingList
	//	*EntitySpecifics_UserEvent
	//	*EntitySpecifics_UserConsent
	//	*EntitySpecifics_SendTabToSelf
	//	*EntitySpecifics_SecurityEvent
	//	*EntitySpecifics_WebApp
	//	*EntitySpecifics_WifiConfiguration
	//	*EntitySpecifics_OsPreference
	//	*EntitySpecifics_OsPriorityPreference
	//	*EntitySpecifics_SharingMessage
	SpecificsVariant     isEntitySpecifics_SpecificsVariant `protobuf_oneof:"specifics_variant"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *EntitySpecifics) Reset()         { *m = EntitySpecifics{} }
func (m *EntitySpecifics) String() string { return proto.CompactTextString(m) }
func (*EntitySpecifics) ProtoMessage()    {}
func (*EntitySpecifics) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{1}
}

func (m *EntitySpecifics) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EntitySpecifics.Unmarshal(m, b)
}
func (m *EntitySpecifics) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EntitySpecifics.Marshal(b, m, deterministic)
}
func (m *EntitySpecifics) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EntitySpecifics.Merge(m, src)
}
func (m *EntitySpecifics) XXX_Size() int {
	return xxx_messageInfo_EntitySpecifics.Size(m)
}
func (m *EntitySpecifics) XXX_DiscardUnknown() {
	xxx_messageInfo_EntitySpecifics.DiscardUnknown(m)
}

var xxx_messageInfo_EntitySpecifics proto.InternalMessageInfo

func (m *EntitySpecifics) GetEncrypted() *EncryptedData {
	if m != nil {
		return m.Encrypted
	}
	return nil
}

type isEntitySpecifics_SpecificsVariant interface {
	isEntitySpecifics_SpecificsVariant()
}

type EntitySpecifics_Autofill struct {
	Autofill *AutofillSpecifics `protobuf:"bytes,31729,opt,name=autofill,oneof"`
}

type EntitySpecifics_Bookmark struct {
	Bookmark *BookmarkSpecifics `protobuf:"bytes,32904,opt,name=bookmark,oneof"`
}

type EntitySpecifics_Preference struct {
	Preference *PreferenceSpecifics `protobuf:"bytes,37702,opt,name=preference,oneof"`
}

type EntitySpecifics_TypedUrl struct {
	TypedUrl *TypedUrlSpecifics `protobuf:"bytes,40781,opt,name=typed_url,json=typedUrl,oneof"`
}

type EntitySpecifics_Theme struct {
	Theme *ThemeSpecifics `protobuf:"bytes,41210,opt,name=theme,oneof"`
}

type EntitySpecifics_AppNotification struct {
	AppNotification *AppNotification `protobuf:"bytes,45184,opt,name=app_notification,json=appNotification,oneof"`
}

type EntitySpecifics_Password struct {
	Password *PasswordSpecifics `protobuf:"bytes,45873,opt,name=password,oneof"`
}

type EntitySpecifics_Nigori struct {
	Nigori *NigoriSpecifics `protobuf:"bytes,47745,opt,name=nigori,oneof"`
}

type EntitySpecifics_Extension struct {
	Extension *ExtensionSpecifics `protobuf:"bytes,48119,opt,name=extension,oneof"`
}

type EntitySpecifics_App struct {
	App *AppSpecifics `protobuf:"bytes,48364,opt,name=app,oneof"`
}

type EntitySpecifics_Session struct {
	Session *SessionSpecifics `protobuf:"bytes,50119,opt,name=session,oneof"`
}

type EntitySpecifics_AutofillProfile struct {
	AutofillProfile *AutofillProfileSpecifics `protobuf:"bytes,63951,opt,name=autofill_profile,json=autofillProfile,oneof"`
}

type EntitySpecifics_SearchEngine struct {
	SearchEngine *SearchEngineSpecifics `protobuf:"bytes,88610,opt,name=search_engine,json=searchEngine,oneof"`
}

type EntitySpecifics_ExtensionSetting struct {
	ExtensionSetting *ExtensionSettingSpecifics `protobuf:"bytes,96159,opt,name=extension_setting,json=extensionSetting,oneof"`
}

type EntitySpecifics_AppSetting struct {
	AppSetting *AppSettingSpecifics `protobuf:"bytes,103656,opt,name=app_setting,json=appSetting,oneof"`
}

type EntitySpecifics_HistoryDeleteDirective struct {
	HistoryDeleteDirective *HistoryDeleteDirectiveSpecifics `protobuf:"bytes,150251,opt,name=history_delete_directive,json=historyDeleteDirective,oneof"`
}

type EntitySpecifics_SyncedNotification struct {
	SyncedNotification *SyncedNotificationSpecifics `protobuf:"bytes,153108,opt,name=synced_notification,json=syncedNotification,oneof"`
}

type EntitySpecifics_SyncedNotificationAppInfo struct {
	SyncedNotificationAppInfo *SyncedNotificationAppInfoSpecifics `protobuf:"bytes,235816,opt,name=synced_notification_app_info,json=syncedNotificationAppInfo,oneof"`
}

type EntitySpecifics_DeviceInfo struct {
	DeviceInfo *DeviceInfoSpecifics `protobuf:"bytes,154522,opt,name=device_info,json=deviceInfo,oneof"`
}

type EntitySpecifics_Experiments struct {
	Experiments *ExperimentsSpecifics `protobuf:"bytes,161496,opt,name=experiments,oneof"`
}

type EntitySpecifics_PriorityPreference struct {
	PriorityPreference *PriorityPreferenceSpecifics `protobuf:"bytes,163425,opt,name=priority_preference,json=priorityPreference,oneof"`
}

type EntitySpecifics_Dictionary struct {
	Dictionary *DictionarySpecifics `protobuf:"bytes,170540,opt,name=dictionary,oneof"`
}

type EntitySpecifics_FaviconTracking struct {
	FaviconTracking *FaviconTrackingSpecifics `protobuf:"bytes,181534,opt,name=favicon_tracking,json=faviconTracking,oneof"`
}

type EntitySpecifics_FaviconImage struct {
	FaviconImage *FaviconImageSpecifics `protobuf:"bytes,182019,opt,name=favicon_image,json=faviconImage,oneof"`
}

type EntitySpecifics_ManagedUserSetting struct {
	ManagedUserSetting *ManagedUserSettingSpecifics `protobuf:"bytes,186662,opt,name=managed_user_setting,json=managedUserSetting,oneof"`
}

type EntitySpecifics_ManagedUser struct {
	ManagedUser *ManagedUserSpecifics `protobuf:"bytes,194582,opt,name=managed_user,json=managedUser,oneof"`
}

type EntitySpecifics_ManagedUserSharedSetting struct {
	ManagedUserSharedSetting *ManagedUserSharedSettingSpecifics `protobuf:"bytes,202026,opt,name=managed_user_shared_setting,json=managedUserSharedSetting,oneof"`
}

type EntitySpecifics_ManagedUserWhitelist struct {
	ManagedUserWhitelist *ManagedUserWhitelistSpecifics `protobuf:"bytes,306060,opt,name=managed_user_whitelist,json=managedUserWhitelist,oneof"`
}

type EntitySpecifics_AppList struct {
	AppList *AppListSpecifics `protobuf:"bytes,229170,opt,name=app_list,json=appList,oneof"`
}

type EntitySpecifics_AutofillWallet struct {
	AutofillWallet *AutofillWalletSpecifics `protobuf:"bytes,306270,opt,name=autofill_wallet,json=autofillWallet,oneof"`
}

type EntitySpecifics_WalletMetadata struct {
	WalletMetadata *WalletMetadataSpecifics `protobuf:"bytes,330441,opt,name=wallet_metadata,json=walletMetadata,oneof"`
}

type EntitySpecifics_ArcPackage struct {
	ArcPackage *ArcPackageSpecifics `protobuf:"bytes,340906,opt,name=arc_package,json=arcPackage,oneof"`
}

type EntitySpecifics_Printer struct {
	Printer *PrinterSpecifics `protobuf:"bytes,410745,opt,name=printer,oneof"`
}

type EntitySpecifics_ReadingList struct {
	ReadingList *ReadingListSpecifics `protobuf:"bytes,411028,opt,name=reading_list,json=readingList,oneof"`
}

type EntitySpecifics_UserEvent struct {
	UserEvent *UserEventSpecifics `protobuf:"bytes,455206,opt,name=user_event,json=userEvent,oneof"`
}

type EntitySpecifics_UserConsent struct {
	UserConsent *UserConsentSpecifics `protobuf:"bytes,556014,opt,name=user_consent,json=userConsent,oneof"`
}

type EntitySpecifics_SendTabToSelf struct {
	SendTabToSelf *SendTabToSelfSpecifics `protobuf:"bytes,601980,opt,name=send_tab_to_self,json=sendTabToSelf,oneof"`
}

type EntitySpecifics_SecurityEvent struct {
	SecurityEvent *SecurityEventSpecifics `protobuf:"bytes,600372,opt,name=security_event,json=securityEvent,oneof"`
}

type EntitySpecifics_WebApp struct {
	WebApp *WebAppSpecifics `protobuf:"bytes,673225,opt,name=web_app,json=webApp,oneof"`
}

type EntitySpecifics_WifiConfiguration struct {
	WifiConfiguration *WifiConfigurationSpecifics `protobuf:"bytes,662827,opt,name=wifi_configuration,json=wifiConfiguration,oneof"`
}

type EntitySpecifics_OsPreference struct {
	OsPreference *OsPreferenceSpecifics `protobuf:"bytes,702141,opt,name=os_preference,json=osPreference,oneof"`
}

type EntitySpecifics_OsPriorityPreference struct {
	OsPriorityPreference *OsPriorityPreferenceSpecifics `protobuf:"bytes,703915,opt,name=os_priority_preference,json=osPriorityPreference,oneof"`
}

type EntitySpecifics_SharingMessage struct {
	SharingMessage *SharingMessageSpecifics `protobuf:"bytes,728866,opt,name=sharing_message,json=sharingMessage,oneof"`
}

func (*EntitySpecifics_Autofill) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Bookmark) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Preference) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_TypedUrl) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Theme) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_AppNotification) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Password) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Nigori) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Extension) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_App) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Session) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_AutofillProfile) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SearchEngine) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ExtensionSetting) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_AppSetting) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_HistoryDeleteDirective) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SyncedNotification) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SyncedNotificationAppInfo) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_DeviceInfo) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Experiments) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_PriorityPreference) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Dictionary) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_FaviconTracking) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_FaviconImage) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ManagedUserSetting) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ManagedUser) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ManagedUserSharedSetting) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ManagedUserWhitelist) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_AppList) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_AutofillWallet) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_WalletMetadata) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ArcPackage) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_Printer) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_ReadingList) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_UserEvent) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_UserConsent) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SendTabToSelf) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SecurityEvent) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_WebApp) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_WifiConfiguration) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_OsPreference) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_OsPriorityPreference) isEntitySpecifics_SpecificsVariant() {}

func (*EntitySpecifics_SharingMessage) isEntitySpecifics_SpecificsVariant() {}

func (m *EntitySpecifics) GetSpecificsVariant() isEntitySpecifics_SpecificsVariant {
	if m != nil {
		return m.SpecificsVariant
	}
	return nil
}

func (m *EntitySpecifics) GetAutofill() *AutofillSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Autofill); ok {
		return x.Autofill
	}
	return nil
}

func (m *EntitySpecifics) GetBookmark() *BookmarkSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Bookmark); ok {
		return x.Bookmark
	}
	return nil
}

func (m *EntitySpecifics) GetPreference() *PreferenceSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Preference); ok {
		return x.Preference
	}
	return nil
}

func (m *EntitySpecifics) GetTypedUrl() *TypedUrlSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_TypedUrl); ok {
		return x.TypedUrl
	}
	return nil
}

func (m *EntitySpecifics) GetTheme() *ThemeSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Theme); ok {
		return x.Theme
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetAppNotification() *AppNotification {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_AppNotification); ok {
		return x.AppNotification
	}
	return nil
}

func (m *EntitySpecifics) GetPassword() *PasswordSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Password); ok {
		return x.Password
	}
	return nil
}

func (m *EntitySpecifics) GetNigori() *NigoriSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Nigori); ok {
		return x.Nigori
	}
	return nil
}

func (m *EntitySpecifics) GetExtension() *ExtensionSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Extension); ok {
		return x.Extension
	}
	return nil
}

func (m *EntitySpecifics) GetApp() *AppSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_App); ok {
		return x.App
	}
	return nil
}

func (m *EntitySpecifics) GetSession() *SessionSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Session); ok {
		return x.Session
	}
	return nil
}

func (m *EntitySpecifics) GetAutofillProfile() *AutofillProfileSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_AutofillProfile); ok {
		return x.AutofillProfile
	}
	return nil
}

func (m *EntitySpecifics) GetSearchEngine() *SearchEngineSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SearchEngine); ok {
		return x.SearchEngine
	}
	return nil
}

func (m *EntitySpecifics) GetExtensionSetting() *ExtensionSettingSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ExtensionSetting); ok {
		return x.ExtensionSetting
	}
	return nil
}

func (m *EntitySpecifics) GetAppSetting() *AppSettingSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_AppSetting); ok {
		return x.AppSetting
	}
	return nil
}

func (m *EntitySpecifics) GetHistoryDeleteDirective() *HistoryDeleteDirectiveSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_HistoryDeleteDirective); ok {
		return x.HistoryDeleteDirective
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetSyncedNotification() *SyncedNotificationSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SyncedNotification); ok {
		return x.SyncedNotification
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetSyncedNotificationAppInfo() *SyncedNotificationAppInfoSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SyncedNotificationAppInfo); ok {
		return x.SyncedNotificationAppInfo
	}
	return nil
}

func (m *EntitySpecifics) GetDeviceInfo() *DeviceInfoSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_DeviceInfo); ok {
		return x.DeviceInfo
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetExperiments() *ExperimentsSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Experiments); ok {
		return x.Experiments
	}
	return nil
}

func (m *EntitySpecifics) GetPriorityPreference() *PriorityPreferenceSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_PriorityPreference); ok {
		return x.PriorityPreference
	}
	return nil
}

func (m *EntitySpecifics) GetDictionary() *DictionarySpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Dictionary); ok {
		return x.Dictionary
	}
	return nil
}

func (m *EntitySpecifics) GetFaviconTracking() *FaviconTrackingSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_FaviconTracking); ok {
		return x.FaviconTracking
	}
	return nil
}

func (m *EntitySpecifics) GetFaviconImage() *FaviconImageSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_FaviconImage); ok {
		return x.FaviconImage
	}
	return nil
}

func (m *EntitySpecifics) GetManagedUserSetting() *ManagedUserSettingSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ManagedUserSetting); ok {
		return x.ManagedUserSetting
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetManagedUser() *ManagedUserSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ManagedUser); ok {
		return x.ManagedUser
	}
	return nil
}

// Deprecated: Do not use.
func (m *EntitySpecifics) GetManagedUserSharedSetting() *ManagedUserSharedSettingSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ManagedUserSharedSetting); ok {
		return x.ManagedUserSharedSetting
	}
	return nil
}

func (m *EntitySpecifics) GetManagedUserWhitelist() *ManagedUserWhitelistSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ManagedUserWhitelist); ok {
		return x.ManagedUserWhitelist
	}
	return nil
}

func (m *EntitySpecifics) GetAppList() *AppListSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_AppList); ok {
		return x.AppList
	}
	return nil
}

func (m *EntitySpecifics) GetAutofillWallet() *AutofillWalletSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_AutofillWallet); ok {
		return x.AutofillWallet
	}
	return nil
}

func (m *EntitySpecifics) GetWalletMetadata() *WalletMetadataSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_WalletMetadata); ok {
		return x.WalletMetadata
	}
	return nil
}

func (m *EntitySpecifics) GetArcPackage() *ArcPackageSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ArcPackage); ok {
		return x.ArcPackage
	}
	return nil
}

func (m *EntitySpecifics) GetPrinter() *PrinterSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_Printer); ok {
		return x.Printer
	}
	return nil
}

func (m *EntitySpecifics) GetReadingList() *ReadingListSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_ReadingList); ok {
		return x.ReadingList
	}
	return nil
}

func (m *EntitySpecifics) GetUserEvent() *UserEventSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_UserEvent); ok {
		return x.UserEvent
	}
	return nil
}

func (m *EntitySpecifics) GetUserConsent() *UserConsentSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_UserConsent); ok {
		return x.UserConsent
	}
	return nil
}

func (m *EntitySpecifics) GetSendTabToSelf() *SendTabToSelfSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SendTabToSelf); ok {
		return x.SendTabToSelf
	}
	return nil
}

func (m *EntitySpecifics) GetSecurityEvent() *SecurityEventSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SecurityEvent); ok {
		return x.SecurityEvent
	}
	return nil
}

func (m *EntitySpecifics) GetWebApp() *WebAppSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_WebApp); ok {
		return x.WebApp
	}
	return nil
}

func (m *EntitySpecifics) GetWifiConfiguration() *WifiConfigurationSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_WifiConfiguration); ok {
		return x.WifiConfiguration
	}
	return nil
}

func (m *EntitySpecifics) GetOsPreference() *OsPreferenceSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_OsPreference); ok {
		return x.OsPreference
	}
	return nil
}

func (m *EntitySpecifics) GetOsPriorityPreference() *OsPriorityPreferenceSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_OsPriorityPreference); ok {
		return x.OsPriorityPreference
	}
	return nil
}

func (m *EntitySpecifics) GetSharingMessage() *SharingMessageSpecifics {
	if x, ok := m.GetSpecificsVariant().(*EntitySpecifics_SharingMessage); ok {
		return x.SharingMessage
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*EntitySpecifics) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*EntitySpecifics_Autofill)(nil),
		(*EntitySpecifics_Bookmark)(nil),
		(*EntitySpecifics_Preference)(nil),
		(*EntitySpecifics_TypedUrl)(nil),
		(*EntitySpecifics_Theme)(nil),
		(*EntitySpecifics_AppNotification)(nil),
		(*EntitySpecifics_Password)(nil),
		(*EntitySpecifics_Nigori)(nil),
		(*EntitySpecifics_Extension)(nil),
		(*EntitySpecifics_App)(nil),
		(*EntitySpecifics_Session)(nil),
		(*EntitySpecifics_AutofillProfile)(nil),
		(*EntitySpecifics_SearchEngine)(nil),
		(*EntitySpecifics_ExtensionSetting)(nil),
		(*EntitySpecifics_AppSetting)(nil),
		(*EntitySpecifics_HistoryDeleteDirective)(nil),
		(*EntitySpecifics_SyncedNotification)(nil),
		(*EntitySpecifics_SyncedNotificationAppInfo)(nil),
		(*EntitySpecifics_DeviceInfo)(nil),
		(*EntitySpecifics_Experiments)(nil),
		(*EntitySpecifics_PriorityPreference)(nil),
		(*EntitySpecifics_Dictionary)(nil),
		(*EntitySpecifics_FaviconTracking)(nil),
		(*EntitySpecifics_FaviconImage)(nil),
		(*EntitySpecifics_ManagedUserSetting)(nil),
		(*EntitySpecifics_ManagedUser)(nil),
		(*EntitySpecifics_ManagedUserSharedSetting)(nil),
		(*EntitySpecifics_ManagedUserWhitelist)(nil),
		(*EntitySpecifics_AppList)(nil),
		(*EntitySpecifics_AutofillWallet)(nil),
		(*EntitySpecifics_WalletMetadata)(nil),
		(*EntitySpecifics_ArcPackage)(nil),
		(*EntitySpecifics_Printer)(nil),
		(*EntitySpecifics_ReadingList)(nil),
		(*EntitySpecifics_UserEvent)(nil),
		(*EntitySpecifics_UserConsent)(nil),
		(*EntitySpecifics_SendTabToSelf)(nil),
		(*EntitySpecifics_SecurityEvent)(nil),
		(*EntitySpecifics_WebApp)(nil),
		(*EntitySpecifics_WifiConfiguration)(nil),
		(*EntitySpecifics_OsPreference)(nil),
		(*EntitySpecifics_OsPriorityPreference)(nil),
		(*EntitySpecifics_SharingMessage)(nil),
	}
}

type SyncEntity struct {
	// This item's identifier.  In a commit of a new item, this will be a
	// client-generated ID.  If the commit succeeds, the server will generate
	// a globally unique ID and return it to the committing client in the
	// CommitResponse.EntryResponse.  In the context of a GetUpdatesResponse,
	// |id_string| is always the server generated ID.  The original
	// client-generated ID is preserved in the |originator_client_id| field.
	// Present in both GetUpdatesResponse and CommitMessage.
	IdString *string `protobuf:"bytes,1,opt,name=id_string,json=idString" json:"id_string,omitempty"`
	// An id referencing this item's parent in the hierarchy.  In a
	// CommitMessage, it is accepted for this to be a client-generated temporary
	// ID if there was a new created item with that ID appearing earlier
	// in the message.  In all other situations, it is a server ID.
	// Present in both GetUpdatesResponse and CommitMessage.
	ParentIdString *string `protobuf:"bytes,2,opt,name=parent_id_string,json=parentIdString" json:"parent_id_string,omitempty"`
	// old_parent_id is only set in commits and indicates the old server
	// parent(s) to remove. When omitted, the old parent is the same as
	// the new.
	// Present only in CommitMessage.
	OldParentId *string `protobuf:"bytes,3,opt,name=old_parent_id,json=oldParentId" json:"old_parent_id,omitempty"`
	// The version of this item -- a monotonically increasing value that is
	// maintained by for each item.  If zero in a CommitMessage, the server
	// will interpret this entity as a newly-created item and generate a
	// new server ID and an initial version number.  If nonzero in a
	// CommitMessage, this item is treated as an update to an existing item, and
	// the server will use |id_string| to locate the item.  Then, if the item's
	// current version on the server does not match |version|, the commit will
	// fail for that item.  The server will not update it, and will return
	// a result code of CONFLICT.  In a GetUpdatesResponse, |version| is
	// always positive and indentifies the revision of the item data being sent
	// to the client.
	// Present in both GetUpdatesResponse and CommitMessage.
	// WARNING: This field used to be required before M60. Any client before this
	// will fail to deserialize if this field is missing.
	Version *int64 `protobuf:"varint,4,opt,name=version" json:"version,omitempty"`
	// Last modification time (in java time milliseconds)
	// Present in both GetUpdatesResponse and CommitMessage.
	Mtime *int64 `protobuf:"varint,5,opt,name=mtime" json:"mtime,omitempty"`
	// Creation time.
	// Present in both GetUpdatesResponse and CommitMessage.
	Ctime *int64 `protobuf:"varint,6,opt,name=ctime" json:"ctime,omitempty"`
	// The name of this item.
	// Historical note:
	//   Since November 2010, this value is no different from non_unique_name.
	//   Before then, server implementations would maintain a unique-within-parent
	//   value separate from its base, "non-unique" value.  Clients had not
	//   depended on the uniqueness of the property since November 2009; it was
	//   removed from Chromium by http://codereview.chromium.org/371029 .
	// Present in both GetUpdatesResponse and CommitMessage.
	// WARNING: This field used to be required before M60. Any client before this
	// will fail to deserialize if this field is missing.
	Name *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// The name of this item.  Same as |name|.
	// |non_unique_name| should take precedence over the |name| value if both
	// are supplied.  For efficiency, clients and servers should avoid setting
	// this redundant value.
	// Present in both GetUpdatesResponse and CommitMessage.
	NonUniqueName *string `protobuf:"bytes,8,opt,name=non_unique_name,json=nonUniqueName" json:"non_unique_name,omitempty"`
	// If present, this tag identifies this item as being a uniquely
	// instanced item.  The server ensures that there is never more
	// than one entity in a user's store with the same tag value.
	// This value is used to identify and find e.g. the "Google Chrome" settings
	// folder without relying on it existing at a particular path, or having
	// a particular name, in the data store.
	//
	// This variant of the tag is created by the server, so clients can't create
	// an item with a tag using this field.
	//
	// Use client_defined_unique_tag if you want to create one from the client.
	//
	// An item can't have both a client_defined_unique_tag and
	// a server_defined_unique_tag.
	//
	// Present only in GetUpdatesResponse.
	ServerDefinedUniqueTag *string `protobuf:"bytes,10,opt,name=server_defined_unique_tag,json=serverDefinedUniqueTag" json:"server_defined_unique_tag,omitempty"`
	// Supplies a numeric position for this item, relative to other items with the
	// same parent.  Deprecated in M26, though clients are still required to set
	// it.
	//
	// Present in both GetUpdatesResponse and CommitMessage.
	//
	// At one point this was used as an alternative / supplement to
	// the deprecated |insert_after_item_id|, but now it, too, has been
	// deprecated.
	//
	// In order to maintain compatibility with older clients, newer clients should
	// still set this field.  Its value should be based on the first 8 bytes of
	// this item's |unique_position|.
	//
	// Nerwer clients must also support the receipt of items that contain
	// |position_in_parent| but no |unique_position|.  They should locally convert
	// the given int64 position to a UniquePosition.
	//
	// The conversion from int64 to UniquePosition is as follows:
	// The int64 value will have its sign bit flipped then placed in big endian
	// order as the first 8 bytes of the UniquePosition.  The subsequent bytes of
	// the UniquePosition will consist of the item's unique suffix.
	//
	// Conversion from UniquePosition to int64 reverses this process: the first 8
	// bytes of the position are to be interpreted as a big endian int64 value
	// with its sign bit flipped.
	PositionInParent *int64 `protobuf:"varint,15,opt,name=position_in_parent,json=positionInParent" json:"position_in_parent,omitempty"` // Deprecated: Do not use.
	// Contains the ID of the element (under the same parent) after which this
	// element resides. An empty string indicates that the element is the first
	// element in the parent.  This value is used during commits to specify
	// a relative position for a position change.  In the context of
	// a GetUpdatesMessage, |position_in_parent| is used instead to
	// communicate position.
	//
	// Present only in CommitMessage.
	//
	// This is deprecated.  Clients are allowed to omit this as long as they
	// include |position_in_parent| instead.
	InsertAfterItemId *string `protobuf:"bytes,16,opt,name=insert_after_item_id,json=insertAfterItemId" json:"insert_after_item_id,omitempty"` // Deprecated: Do not use.
	// If true, indicates that this item has been (or should be) deleted.
	// Present in both GetUpdatesResponse and CommitMessage.
	Deleted *bool `protobuf:"varint,18,opt,name=deleted,def=0" json:"deleted,omitempty"`
	// A GUID that identifies the the sync client who initially committed
	// this entity.  This value corresponds to |cache_guid| in CommitMessage.
	// This field, along with |originator_client_item_id|, can be used to
	// reunite the original with its official committed version in the case
	// where a client does not receive or process the commit response for
	// some reason.
	//
	// Present only in GetUpdatesResponse.
	//
	// This field is also used in determining the unique identifier used in
	// bookmarks' unique_position field.
	OriginatorCacheGuid *string `protobuf:"bytes,19,opt,name=originator_cache_guid,json=originatorCacheGuid" json:"originator_cache_guid,omitempty"`
	// Item ID as generated by the client that initially created this entity. Used
	// exclusively for bookmarks (other datatypes use client_defined_unique_tag).
	// There are three generation of bookmarks that have populated this field
	// differently, depending on which version of the browser created the
	// bookmark:
	// 1. For bookmarks created before M44 (2015), the field got populated with an
	//    ID that is locally unique, but not globally unique (usually a negative
	//    number).
	// 2. For bookmarks created between M45 and M51, both inclusive, the field got
	//    populated with a globally unique GUID in uppercase form.
	// 3. For bookmarks created with M52 or above, the field gets populated with
	//    a globally unique GUID in lowercase form.
	//
	// Present only in GetUpdatesResponse.
	OriginatorClientItemId *string `protobuf:"bytes,20,opt,name=originator_client_item_id,json=originatorClientItemId" json:"originator_client_item_id,omitempty"`
	// Extensible container for datatype-specific data.
	// This became available in version 23 of the protocol.
	Specifics *EntitySpecifics `protobuf:"bytes,21,opt,name=specifics" json:"specifics,omitempty"`
	// Indicate whether this is a folder or not. Available in version 23+.
	Folder *bool `protobuf:"varint,22,opt,name=folder,def=0" json:"folder,omitempty"`
	// A client defined unique hash for this entity.
	// Similar to server_defined_unique_tag.
	//
	// When initially committing an entity, a client can request that the entity
	// is unique per that account. To do so, the client should specify a
	// client_defined_unique_tag. At most one entity per tag value may exist.
	// per account. The server will enforce uniqueness on this tag
	// and fail attempts to create duplicates of this tag.
	// Will be returned in any updates for this entity.
	//
	// The difference between server_defined_unique_tag and
	// client_defined_unique_tag is the creator of the entity. Server defined
	// tags are entities created by the server at account creation,
	// while client defined tags are entities created by the client at any time.
	//
	// During GetUpdates, a sync entity update will come back with ONE of:
	// a) Originator and cache id - If client committed the item as non "unique"
	// b) Server tag - If server committed the item as unique
	// c) Client tag - If client committed the item as unique
	//
	// May be present in CommitMessages for the initial creation of an entity.
	// If present in Commit updates for the entity, it will be ignored.
	//
	// Available in version 24+.
	//
	// May be returned in GetUpdatesMessage and sent up in CommitMessage.
	//
	ClientDefinedUniqueTag *string `protobuf:"bytes,23,opt,name=client_defined_unique_tag,json=clientDefinedUniqueTag" json:"client_defined_unique_tag,omitempty"`
	// This positioning system had a relatively short life.  It was made obsolete
	// by |unique_position| before either the client or server made much of an
	// attempt to support it.  In fact, no client ever read or set this field.
	//
	// Deprecated in M26.
	OrdinalInParent []byte `protobuf:"bytes,24,opt,name=ordinal_in_parent,json=ordinalInParent" json:"ordinal_in_parent,omitempty"` // Deprecated: Do not use.
	// This is the fourth attempt at positioning.
	//
	// This field is present in both GetUpdatesResponse and CommitMessage, if the
	// item's type requires it and the client that wrote the item supports it (M26
	// or higher).  Clients must also be prepared to handle updates from clients
	// that do not set this field.
	//
	// This field will not be set for items whose type ignores positioning.
	// Clients should not attempt to read this field on the receipt of an item of
	// a type that ignores positioning.
	//
	// Refer to its definition in unique_position.proto for more information about
	// its internal representation.
	UniquePosition       *UniquePosition `protobuf:"bytes,25,opt,name=unique_position,json=uniquePosition" json:"unique_position,omitempty"`
	XXX_NoUnkeyedLiteral struct{}        `json:"-"`
	XXX_unrecognized     []byte          `json:"-"`
	XXX_sizecache        int32           `json:"-"`
}

func (m *SyncEntity) Reset()         { *m = SyncEntity{} }
func (m *SyncEntity) String() string { return proto.CompactTextString(m) }
func (*SyncEntity) ProtoMessage()    {}
func (*SyncEntity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{2}
}

func (m *SyncEntity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncEntity.Unmarshal(m, b)
}
func (m *SyncEntity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncEntity.Marshal(b, m, deterministic)
}
func (m *SyncEntity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncEntity.Merge(m, src)
}
func (m *SyncEntity) XXX_Size() int {
	return xxx_messageInfo_SyncEntity.Size(m)
}
func (m *SyncEntity) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncEntity.DiscardUnknown(m)
}

var xxx_messageInfo_SyncEntity proto.InternalMessageInfo

const Default_SyncEntity_Deleted bool = false
const Default_SyncEntity_Folder bool = false

func (m *SyncEntity) GetIdString() string {
	if m != nil && m.IdString != nil {
		return *m.IdString
	}
	return ""
}

func (m *SyncEntity) GetParentIdString() string {
	if m != nil && m.ParentIdString != nil {
		return *m.ParentIdString
	}
	return ""
}

func (m *SyncEntity) GetOldParentId() string {
	if m != nil && m.OldParentId != nil {
		return *m.OldParentId
	}
	return ""
}

func (m *SyncEntity) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *SyncEntity) GetMtime() int64 {
	if m != nil && m.Mtime != nil {
		return *m.Mtime
	}
	return 0
}

func (m *SyncEntity) GetCtime() int64 {
	if m != nil && m.Ctime != nil {
		return *m.Ctime
	}
	return 0
}

func (m *SyncEntity) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *SyncEntity) GetNonUniqueName() string {
	if m != nil && m.NonUniqueName != nil {
		return *m.NonUniqueName
	}
	return ""
}

func (m *SyncEntity) GetServerDefinedUniqueTag() string {
	if m != nil && m.ServerDefinedUniqueTag != nil {
		return *m.ServerDefinedUniqueTag
	}
	return ""
}

// Deprecated: Do not use.
func (m *SyncEntity) GetPositionInParent() int64 {
	if m != nil && m.PositionInParent != nil {
		return *m.PositionInParent
	}
	return 0
}

// Deprecated: Do not use.
func (m *SyncEntity) GetInsertAfterItemId() string {
	if m != nil && m.InsertAfterItemId != nil {
		return *m.InsertAfterItemId
	}
	return ""
}

func (m *SyncEntity) GetDeleted() bool {
	if m != nil && m.Deleted != nil {
		return *m.Deleted
	}
	return Default_SyncEntity_Deleted
}

func (m *SyncEntity) GetOriginatorCacheGuid() string {
	if m != nil && m.OriginatorCacheGuid != nil {
		return *m.OriginatorCacheGuid
	}
	return ""
}

func (m *SyncEntity) GetOriginatorClientItemId() string {
	if m != nil && m.OriginatorClientItemId != nil {
		return *m.OriginatorClientItemId
	}
	return ""
}

func (m *SyncEntity) GetSpecifics() *EntitySpecifics {
	if m != nil {
		return m.Specifics
	}
	return nil
}

func (m *SyncEntity) GetFolder() bool {
	if m != nil && m.Folder != nil {
		return *m.Folder
	}
	return Default_SyncEntity_Folder
}

func (m *SyncEntity) GetClientDefinedUniqueTag() string {
	if m != nil && m.ClientDefinedUniqueTag != nil {
		return *m.ClientDefinedUniqueTag
	}
	return ""
}

// Deprecated: Do not use.
func (m *SyncEntity) GetOrdinalInParent() []byte {
	if m != nil {
		return m.OrdinalInParent
	}
	return nil
}

func (m *SyncEntity) GetUniquePosition() *UniquePosition {
	if m != nil {
		return m.UniquePosition
	}
	return nil
}

// This message contains diagnostic information used to correlate
// commit-related traffic with extensions-related mutations to the
// data models in chromium.  It plays no functional role in
// processing this CommitMessage.
type ChromiumExtensionsActivity struct {
	// The human-readable ID identifying the extension responsible
	// for the traffic reported in this ChromiumExtensionsActivity.
	ExtensionId *string `protobuf:"bytes,1,opt,name=extension_id,json=extensionId" json:"extension_id,omitempty"`
	// How many times the extension successfully invoked a write
	// operation through the bookmarks API since the last CommitMessage.
	BookmarkWritesSinceLastCommit *uint32  `protobuf:"varint,2,opt,name=bookmark_writes_since_last_commit,json=bookmarkWritesSinceLastCommit" json:"bookmark_writes_since_last_commit,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *ChromiumExtensionsActivity) Reset()         { *m = ChromiumExtensionsActivity{} }
func (m *ChromiumExtensionsActivity) String() string { return proto.CompactTextString(m) }
func (*ChromiumExtensionsActivity) ProtoMessage()    {}
func (*ChromiumExtensionsActivity) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{3}
}

func (m *ChromiumExtensionsActivity) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChromiumExtensionsActivity.Unmarshal(m, b)
}
func (m *ChromiumExtensionsActivity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChromiumExtensionsActivity.Marshal(b, m, deterministic)
}
func (m *ChromiumExtensionsActivity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChromiumExtensionsActivity.Merge(m, src)
}
func (m *ChromiumExtensionsActivity) XXX_Size() int {
	return xxx_messageInfo_ChromiumExtensionsActivity.Size(m)
}
func (m *ChromiumExtensionsActivity) XXX_DiscardUnknown() {
	xxx_messageInfo_ChromiumExtensionsActivity.DiscardUnknown(m)
}

var xxx_messageInfo_ChromiumExtensionsActivity proto.InternalMessageInfo

func (m *ChromiumExtensionsActivity) GetExtensionId() string {
	if m != nil && m.ExtensionId != nil {
		return *m.ExtensionId
	}
	return ""
}

func (m *ChromiumExtensionsActivity) GetBookmarkWritesSinceLastCommit() uint32 {
	if m != nil && m.BookmarkWritesSinceLastCommit != nil {
		return *m.BookmarkWritesSinceLastCommit
	}
	return 0
}

// Client specific configuration information.
type ClientConfigParams struct {
	// The set of data types this client has enabled. Note that this does not
	// include proxy types, as they do not have protocol field numbers and are
	// placeholder types that implicitly enable protocol types.
	EnabledTypeIds []int32 `protobuf:"varint,1,rep,name=enabled_type_ids,json=enabledTypeIds" json:"enabled_type_ids,omitempty"`
	// Whether the PROXY_TABS proxy datatype is enabled on this client.
	TabsDatatypeEnabled *bool `protobuf:"varint,2,opt,name=tabs_datatype_enabled,json=tabsDatatypeEnabled" json:"tabs_datatype_enabled,omitempty"`
	// Whether the account(s) present in the content area's cookie jar match the
	// chrome account. If multiple accounts are present in the cookie jar, a
	// mismatch implies all of them are different from the chrome account.
	CookieJarMismatch    *bool    `protobuf:"varint,3,opt,name=cookie_jar_mismatch,json=cookieJarMismatch" json:"cookie_jar_mismatch,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientConfigParams) Reset()         { *m = ClientConfigParams{} }
func (m *ClientConfigParams) String() string { return proto.CompactTextString(m) }
func (*ClientConfigParams) ProtoMessage()    {}
func (*ClientConfigParams) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{4}
}

func (m *ClientConfigParams) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientConfigParams.Unmarshal(m, b)
}
func (m *ClientConfigParams) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientConfigParams.Marshal(b, m, deterministic)
}
func (m *ClientConfigParams) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientConfigParams.Merge(m, src)
}
func (m *ClientConfigParams) XXX_Size() int {
	return xxx_messageInfo_ClientConfigParams.Size(m)
}
func (m *ClientConfigParams) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientConfigParams.DiscardUnknown(m)
}

var xxx_messageInfo_ClientConfigParams proto.InternalMessageInfo

func (m *ClientConfigParams) GetEnabledTypeIds() []int32 {
	if m != nil {
		return m.EnabledTypeIds
	}
	return nil
}

func (m *ClientConfigParams) GetTabsDatatypeEnabled() bool {
	if m != nil && m.TabsDatatypeEnabled != nil {
		return *m.TabsDatatypeEnabled
	}
	return false
}

func (m *ClientConfigParams) GetCookieJarMismatch() bool {
	if m != nil && m.CookieJarMismatch != nil {
		return *m.CookieJarMismatch
	}
	return false
}

type CommitMessage struct {
	Entries []*SyncEntity `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// A GUID that identifies the committing sync client.  This value will be
	// returned as originator_cache_guid for any new items.
	CacheGuid          *string                       `protobuf:"bytes,2,opt,name=cache_guid,json=cacheGuid" json:"cache_guid,omitempty"`
	ExtensionsActivity []*ChromiumExtensionsActivity `protobuf:"bytes,3,rep,name=extensions_activity,json=extensionsActivity" json:"extensions_activity,omitempty"`
	// The configuration of this client at commit time. Used by the server to
	// make commit-time decisions about how to process datatypes that might
	// involve server-side interaction, and e.g require explicit user intent for
	// syncing a particular data type regardless of whether a commit for that
	// datatype is currently being sent up.
	ConfigParams *ClientConfigParams `protobuf:"bytes,4,opt,name=config_params,json=configParams" json:"config_params,omitempty"`
	// Set of optional per-client datatype contexts.
	ClientContexts []*DataTypeContext `protobuf:"bytes,5,rep,name=client_contexts,json=clientContexts" json:"client_contexts,omitempty"`
	// This field need to be 256 bytes if set. This attempts to mitigate CRIME
	// attacks when sync communicate from client to server with compression. So if
	// compression is used, this need to set a 256 random ASCII bytes. If no
	// compression, this field should not be set. The server can ignore the
	// padding.
	Padding              *string  `protobuf:"bytes,6,opt,name=padding" json:"padding,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommitMessage) Reset()         { *m = CommitMessage{} }
func (m *CommitMessage) String() string { return proto.CompactTextString(m) }
func (*CommitMessage) ProtoMessage()    {}
func (*CommitMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{5}
}

func (m *CommitMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitMessage.Unmarshal(m, b)
}
func (m *CommitMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitMessage.Marshal(b, m, deterministic)
}
func (m *CommitMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitMessage.Merge(m, src)
}
func (m *CommitMessage) XXX_Size() int {
	return xxx_messageInfo_CommitMessage.Size(m)
}
func (m *CommitMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitMessage.DiscardUnknown(m)
}

var xxx_messageInfo_CommitMessage proto.InternalMessageInfo

func (m *CommitMessage) GetEntries() []*SyncEntity {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *CommitMessage) GetCacheGuid() string {
	if m != nil && m.CacheGuid != nil {
		return *m.CacheGuid
	}
	return ""
}

func (m *CommitMessage) GetExtensionsActivity() []*ChromiumExtensionsActivity {
	if m != nil {
		return m.ExtensionsActivity
	}
	return nil
}

func (m *CommitMessage) GetConfigParams() *ClientConfigParams {
	if m != nil {
		return m.ConfigParams
	}
	return nil
}

func (m *CommitMessage) GetClientContexts() []*DataTypeContext {
	if m != nil {
		return m.ClientContexts
	}
	return nil
}

func (m *CommitMessage) GetPadding() string {
	if m != nil && m.Padding != nil {
		return *m.Padding
	}
	return ""
}

// This message communicates additional per-type information related to
// requests with origin GU_TRIGGER.  This message is not relevant when any
// other origin value is used.
// Introduced in M29.
type GetUpdateTriggers struct {
	// An opaque-to-the-client string of bytes, received through a notification,
	// that the server may interpret as a hint about the location of the latest
	// version of the data for this type.
	//
	// Note that this will eventually replace the 'optional' field of the same
	// name defined in the progress marker, but the client and server should
	// support both until it's safe to deprecate the old one.
	//
	// This field was introduced in M29.
	NotificationHint []string `protobuf:"bytes,1,rep,name=notification_hint,json=notificationHint" json:"notification_hint,omitempty"`
	// This flag is set if the client was forced to drop hints because the number
	// of queued hints exceeded its limit.  The oldest hints will be discarded
	// first.  Introduced in M29.
	ClientDroppedHints *bool `protobuf:"varint,2,opt,name=client_dropped_hints,json=clientDroppedHints" json:"client_dropped_hints,omitempty"`
	// This flag is set when the client suspects that its list of invalidation
	// hints may be incomplete.  This may be the case if:
	// - The client is syncing for the first time.
	// - The client has just restarted and it was unable to keep track of
	//   invalidations that were received prior to the restart.
	// - The client's connection to the invalidation server is currently or
	//   was recently broken.
	//
	// It's difficult to provide more details here.  This is implemented by
	// setting the flag to false whenever anything that might adversely affect
	// notifications happens (eg. a crash, restart on a platform that doesn't
	// support invalidation ack-tracking, transient invalidation error) and is
	// unset only after we've experienced one successful sync cycle while
	// notifications were enabled.
	//
	// This flag was introduced in M29.
	InvalidationsOutOfSync *bool `protobuf:"varint,3,opt,name=invalidations_out_of_sync,json=invalidationsOutOfSync" json:"invalidations_out_of_sync,omitempty"`
	// This counts the number of times the syncer has been asked to commit
	// changes for this type since the last successful sync cycle.  The number of
	// nudges may not be related to the actual number of items modified.  It
	// often correlates with the number of user actions, but that's not always
	// the case.
	// Introduced in M29.
	LocalModificationNudges *int64 `protobuf:"varint,4,opt,name=local_modification_nudges,json=localModificationNudges" json:"local_modification_nudges,omitempty"`
	// This counts the number of times the syncer has been explicitly asked to
	// fetch updates for this type since the last successful sync cycle.  These
	// explicit refresh requests should be relatively rare on most platforms, and
	// associated with user actions.  For example, at the time of this writing
	// the most common (only?) source of refresh requests is when a user opens
	// the new tab page on a platform that does not support sessions
	// invalidations.
	// Introduced in M29.
	DatatypeRefreshNudges *int64 `protobuf:"varint,5,opt,name=datatype_refresh_nudges,json=datatypeRefreshNudges" json:"datatype_refresh_nudges,omitempty"`
	// This flag is set if the invalidation server reports that it may have
	// dropped some invalidations at some point.  Introduced in M33.
	ServerDroppedHints *bool `protobuf:"varint,6,opt,name=server_dropped_hints,json=serverDroppedHints" json:"server_dropped_hints,omitempty"`
	// This flag is set if this GetUpdate request is due at least in part due
	// to the fact that this type has not finished initial sync yet, and the
	// client would like to initialize itself with the server data.
	//
	// Only some types support performing an initial sync as part of a normal
	// GetUpdate request.  Many types must be in configure mode when fetching
	// initial sync data.
	//
	// Introduced in M38.
	InitialSyncInProgress *bool `protobuf:"varint,7,opt,name=initial_sync_in_progress,json=initialSyncInProgress" json:"initial_sync_in_progress,omitempty"`
	// This flag is set if this GetUpdate request is due to client receiving
	// conflict response from server, so client needs to sync and then resolve
	// conflict locally, and then commit again.
	//
	// Introduced in M42.
	SyncForResolveConflictInProgress *bool    `protobuf:"varint,8,opt,name=sync_for_resolve_conflict_in_progress,json=syncForResolveConflictInProgress" json:"sync_for_resolve_conflict_in_progress,omitempty"`
	XXX_NoUnkeyedLiteral             struct{} `json:"-"`
	XXX_unrecognized                 []byte   `json:"-"`
	XXX_sizecache                    int32    `json:"-"`
}

func (m *GetUpdateTriggers) Reset()         { *m = GetUpdateTriggers{} }
func (m *GetUpdateTriggers) String() string { return proto.CompactTextString(m) }
func (*GetUpdateTriggers) ProtoMessage()    {}
func (*GetUpdateTriggers) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{6}
}

func (m *GetUpdateTriggers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdateTriggers.Unmarshal(m, b)
}
func (m *GetUpdateTriggers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdateTriggers.Marshal(b, m, deterministic)
}
func (m *GetUpdateTriggers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdateTriggers.Merge(m, src)
}
func (m *GetUpdateTriggers) XXX_Size() int {
	return xxx_messageInfo_GetUpdateTriggers.Size(m)
}
func (m *GetUpdateTriggers) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdateTriggers.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdateTriggers proto.InternalMessageInfo

func (m *GetUpdateTriggers) GetNotificationHint() []string {
	if m != nil {
		return m.NotificationHint
	}
	return nil
}

func (m *GetUpdateTriggers) GetClientDroppedHints() bool {
	if m != nil && m.ClientDroppedHints != nil {
		return *m.ClientDroppedHints
	}
	return false
}

func (m *GetUpdateTriggers) GetInvalidationsOutOfSync() bool {
	if m != nil && m.InvalidationsOutOfSync != nil {
		return *m.InvalidationsOutOfSync
	}
	return false
}

func (m *GetUpdateTriggers) GetLocalModificationNudges() int64 {
	if m != nil && m.LocalModificationNudges != nil {
		return *m.LocalModificationNudges
	}
	return 0
}

func (m *GetUpdateTriggers) GetDatatypeRefreshNudges() int64 {
	if m != nil && m.DatatypeRefreshNudges != nil {
		return *m.DatatypeRefreshNudges
	}
	return 0
}

func (m *GetUpdateTriggers) GetServerDroppedHints() bool {
	if m != nil && m.ServerDroppedHints != nil {
		return *m.ServerDroppedHints
	}
	return false
}

func (m *GetUpdateTriggers) GetInitialSyncInProgress() bool {
	if m != nil && m.InitialSyncInProgress != nil {
		return *m.InitialSyncInProgress
	}
	return false
}

func (m *GetUpdateTriggers) GetSyncForResolveConflictInProgress() bool {
	if m != nil && m.SyncForResolveConflictInProgress != nil {
		return *m.SyncForResolveConflictInProgress
	}
	return false
}

type GarbageCollectionDirective struct {
	Type *GarbageCollectionDirective_Type `protobuf:"varint,1,opt,name=type,enum=sync_pb.GarbageCollectionDirective_Type,def=0" json:"type,omitempty"`
	// This field specifies the watermark for the versions which should get
	// garbage collected.  The client should purge all sync entities when
	// receiving any value of this.  This is a change from previous behavior,
	// where the client would only be required to purge items older than the
	// specified watermark.
	// TODO(crbug.com/877951): Rename this to make clear that whenever it's set,
	// the client will delete ALL data, regardless of its value.
	VersionWatermark *int64 `protobuf:"varint,2,opt,name=version_watermark,json=versionWatermark" json:"version_watermark,omitempty"`
	// This field specifies the watermark in terms of age in days.  The client
	// should purge all sync entities which are older than this specific value
	// based on last modified time.
	AgeWatermarkInDays   *int32   `protobuf:"varint,3,opt,name=age_watermark_in_days,json=ageWatermarkInDays" json:"age_watermark_in_days,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GarbageCollectionDirective) Reset()         { *m = GarbageCollectionDirective{} }
func (m *GarbageCollectionDirective) String() string { return proto.CompactTextString(m) }
func (*GarbageCollectionDirective) ProtoMessage()    {}
func (*GarbageCollectionDirective) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{7}
}

func (m *GarbageCollectionDirective) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GarbageCollectionDirective.Unmarshal(m, b)
}
func (m *GarbageCollectionDirective) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GarbageCollectionDirective.Marshal(b, m, deterministic)
}
func (m *GarbageCollectionDirective) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GarbageCollectionDirective.Merge(m, src)
}
func (m *GarbageCollectionDirective) XXX_Size() int {
	return xxx_messageInfo_GarbageCollectionDirective.Size(m)
}
func (m *GarbageCollectionDirective) XXX_DiscardUnknown() {
	xxx_messageInfo_GarbageCollectionDirective.DiscardUnknown(m)
}

var xxx_messageInfo_GarbageCollectionDirective proto.InternalMessageInfo

const Default_GarbageCollectionDirective_Type GarbageCollectionDirective_Type = GarbageCollectionDirective_UNKNOWN

func (m *GarbageCollectionDirective) GetType() GarbageCollectionDirective_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Default_GarbageCollectionDirective_Type
}

func (m *GarbageCollectionDirective) GetVersionWatermark() int64 {
	if m != nil && m.VersionWatermark != nil {
		return *m.VersionWatermark
	}
	return 0
}

func (m *GarbageCollectionDirective) GetAgeWatermarkInDays() int32 {
	if m != nil && m.AgeWatermarkInDays != nil {
		return *m.AgeWatermarkInDays
	}
	return 0
}

type DataTypeProgressMarker struct {
	// An integer identifying the data type whose progress is tracked by this
	// marker.  The legitimate values of this field correspond to the protobuf
	// field numbers of all EntitySpecifics fields supported by the server.
	// These values are externally declared in per-datatype .proto files.
	DataTypeId *int32 `protobuf:"varint,1,opt,name=data_type_id,json=dataTypeId" json:"data_type_id,omitempty"`
	// An opaque-to-the-client sequence of bytes that the server may interpret
	// as an indicator of the client's knowledge state.  If this is empty or
	// omitted by the client, it indicates that the client is initiating a
	// a first-time sync of this datatype.  Otherwise, clients must supply a
	// value previously returned by the server in an earlier GetUpdatesResponse.
	// These values are not comparable or generable on the client.
	//
	// The opaque semantics of this field are to afford server implementations
	// some flexibility in implementing progress tracking.  For instance,
	// a server implementation built on top of a distributed storage service --
	// or multiple heterogenous such services -- might need to supply a vector
	// of totally ordered monotonic update timestamps, rather than a single
	// monotonically increasing value.  Other optimizations may also be
	// possible if the server is allowed to embed arbitrary information in
	// the progress token.
	//
	// Server implementations should keep the size of these tokens relatively
	// small, on the order of tens of bytes, and they should remain small
	// regardless of the number of items synchronized.  (A possible bad server
	// implementation would be for progress_token to contain a list of all the
	// items ever sent to the client.  Servers shouldn't do this.)
	Token []byte `protobuf:"bytes,2,opt,name=token" json:"token,omitempty"`
	// Clients that previously downloaded updates synced using the timestamp based
	// progress tracking mechanism, but which wish to switch over to the opaque
	// token mechanism can set this field in a GetUpdatesMessage.  The server
	// will perform a get updates operation as normal from the indicated
	// timestamp, and return only an opaque progress token.
	TimestampTokenForMigration *int64 `protobuf:"varint,3,opt,name=timestamp_token_for_migration,json=timestampTokenForMigration" json:"timestamp_token_for_migration,omitempty"` // Deprecated: Do not use.
	// An opaque-to-the-client string of bytes, received through a notification,
	// that the server may interpret as a hint about the location of the latest
	// version of the data for this type.
	//
	// Deprecated in M29.  We should use the repeated field version in the
	// PerClientTypeState instead.
	NotificationHint *string `protobuf:"bytes,4,opt,name=notification_hint,json=notificationHint" json:"notification_hint,omitempty"` // Deprecated: Do not use.
	// This field will be included only in GetUpdates with origin GU_TRIGGER.
	GetUpdateTriggers *GetUpdateTriggers `protobuf:"bytes,5,opt,name=get_update_triggers,json=getUpdateTriggers" json:"get_update_triggers,omitempty"`
	// The garbage collection directive for this data type.  The client should
	// purge items locally based on this directive.  Since this directive is
	// designed to be sent from server only, the client should persist it locally
	// as needed and avoid sending it to the server.
	GcDirective          *GarbageCollectionDirective `protobuf:"bytes,6,opt,name=gc_directive,json=gcDirective" json:"gc_directive,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                    `json:"-"`
	XXX_unrecognized     []byte                      `json:"-"`
	XXX_sizecache        int32                       `json:"-"`
}

func (m *DataTypeProgressMarker) Reset()         { *m = DataTypeProgressMarker{} }
func (m *DataTypeProgressMarker) String() string { return proto.CompactTextString(m) }
func (*DataTypeProgressMarker) ProtoMessage()    {}
func (*DataTypeProgressMarker) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{8}
}

func (m *DataTypeProgressMarker) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTypeProgressMarker.Unmarshal(m, b)
}
func (m *DataTypeProgressMarker) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTypeProgressMarker.Marshal(b, m, deterministic)
}
func (m *DataTypeProgressMarker) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTypeProgressMarker.Merge(m, src)
}
func (m *DataTypeProgressMarker) XXX_Size() int {
	return xxx_messageInfo_DataTypeProgressMarker.Size(m)
}
func (m *DataTypeProgressMarker) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTypeProgressMarker.DiscardUnknown(m)
}

var xxx_messageInfo_DataTypeProgressMarker proto.InternalMessageInfo

func (m *DataTypeProgressMarker) GetDataTypeId() int32 {
	if m != nil && m.DataTypeId != nil {
		return *m.DataTypeId
	}
	return 0
}

func (m *DataTypeProgressMarker) GetToken() []byte {
	if m != nil {
		return m.Token
	}
	return nil
}

// Deprecated: Do not use.
func (m *DataTypeProgressMarker) GetTimestampTokenForMigration() int64 {
	if m != nil && m.TimestampTokenForMigration != nil {
		return *m.TimestampTokenForMigration
	}
	return 0
}

// Deprecated: Do not use.
func (m *DataTypeProgressMarker) GetNotificationHint() string {
	if m != nil && m.NotificationHint != nil {
		return *m.NotificationHint
	}
	return ""
}

func (m *DataTypeProgressMarker) GetGetUpdateTriggers() *GetUpdateTriggers {
	if m != nil {
		return m.GetUpdateTriggers
	}
	return nil
}

func (m *DataTypeProgressMarker) GetGcDirective() *GarbageCollectionDirective {
	if m != nil {
		return m.GcDirective
	}
	return nil
}

type GetUpdatesMessage struct {
	// Indicates the reason for the GetUpdatesMessage.
	// This was *mostly* deprecated in M29.  GetUpdatesOrigin is the new way to
	// encode the reason for the GetUpdates request, but some parts of the server
	// still rely on this field.  It also still contains the
	// "notifications_enabled" flag which needs to be moved elsewhere before this
	// can be fully removed. See https://crbug.com/510165.
	CallerInfo *GetUpdatesCallerInfo `protobuf:"bytes,2,opt,name=caller_info,json=callerInfo" json:"caller_info,omitempty"`
	// Indicates whether related folders should be fetched.
	FetchFolders *bool `protobuf:"varint,3,opt,name=fetch_folders,json=fetchFolders,def=1" json:"fetch_folders,omitempty"`
	// Client-requested limit on the maximum number of updates to return at once.
	// The server may opt to return fewer updates than this amount, but it should
	// not return more.
	BatchSize *int32 `protobuf:"varint,5,opt,name=batch_size,json=batchSize" json:"batch_size,omitempty"`
	// Per-datatype progress marker.  If present, the server will ignore
	// the values of requested_types and from_timestamp, using this instead.
	//
	// With the exception of certain configuration or initial sync requests, the
	// client should include one instance of this field for each enabled data
	// type.
	FromProgressMarker []*DataTypeProgressMarker `protobuf:"bytes,6,rep,name=from_progress_marker,json=fromProgressMarker" json:"from_progress_marker,omitempty"`
	// Indicates whether the response should be sent in chunks.  This may be
	// needed for devices with limited memory resources.  If true, the response
	// will include one or more ClientToServerResponses, with the frist one
	// containing GetUpdatesMetadataResponse, and the remaining ones, if any,
	// containing GetUpdatesStreamingResponse.  These ClientToServerResponses are
	// delimited by a length prefix, which is encoded as a varint.
	Streaming *bool `protobuf:"varint,7,opt,name=streaming,def=0" json:"streaming,omitempty"`
	// Whether the client needs the server to provide an encryption key for this
	// account.
	// Note: this should typically only be set on the first GetUpdates a client
	// requests. Clients are expected to persist the encryption key from then on.
	// The allowed frequency for requesting encryption keys is much lower than
	// other datatypes, so repeated usage will likely result in throttling.
	NeedEncryptionKey *bool `protobuf:"varint,8,opt,name=need_encryption_key,json=needEncryptionKey,def=0" json:"need_encryption_key,omitempty"`
	// Whether to create the mobile bookmarks folder if it's not
	// already created.  Set to true by all modern clients.
	CreateMobileBookmarksFolder *bool `protobuf:"varint,1000,opt,name=create_mobile_bookmarks_folder,json=createMobileBookmarksFolder,def=0" json:"create_mobile_bookmarks_folder,omitempty"` // Deprecated: Do not use.
	// This value is an updated version of the GetUpdatesCallerInfo's
	// GetUpdatesSource.  It describes the reason for the GetUpdate request.
	// Introduced in M29.
	GetUpdatesOrigin *SyncEnums_GetUpdatesOrigin `protobuf:"varint,9,opt,name=get_updates_origin,json=getUpdatesOrigin,enum=sync_pb.SyncEnums_GetUpdatesOrigin" json:"get_updates_origin,omitempty"`
	// Whether this GU also serves as a retry GU. Any GU that happens after
	// retry timer timeout is a retry GU effectively.
	IsRetry *bool `protobuf:"varint,10,opt,name=is_retry,json=isRetry,def=0" json:"is_retry,omitempty"`
	// Set of optional per-client datatype contexts.
	ClientContexts       []*DataTypeContext `protobuf:"bytes,11,rep,name=client_contexts,json=clientContexts" json:"client_contexts,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetUpdatesMessage) Reset()         { *m = GetUpdatesMessage{} }
func (m *GetUpdatesMessage) String() string { return proto.CompactTextString(m) }
func (*GetUpdatesMessage) ProtoMessage()    {}
func (*GetUpdatesMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{9}
}

func (m *GetUpdatesMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatesMessage.Unmarshal(m, b)
}
func (m *GetUpdatesMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatesMessage.Marshal(b, m, deterministic)
}
func (m *GetUpdatesMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatesMessage.Merge(m, src)
}
func (m *GetUpdatesMessage) XXX_Size() int {
	return xxx_messageInfo_GetUpdatesMessage.Size(m)
}
func (m *GetUpdatesMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatesMessage.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatesMessage proto.InternalMessageInfo

const Default_GetUpdatesMessage_FetchFolders bool = true
const Default_GetUpdatesMessage_Streaming bool = false
const Default_GetUpdatesMessage_NeedEncryptionKey bool = false
const Default_GetUpdatesMessage_CreateMobileBookmarksFolder bool = false
const Default_GetUpdatesMessage_IsRetry bool = false

func (m *GetUpdatesMessage) GetCallerInfo() *GetUpdatesCallerInfo {
	if m != nil {
		return m.CallerInfo
	}
	return nil
}

func (m *GetUpdatesMessage) GetFetchFolders() bool {
	if m != nil && m.FetchFolders != nil {
		return *m.FetchFolders
	}
	return Default_GetUpdatesMessage_FetchFolders
}

func (m *GetUpdatesMessage) GetBatchSize() int32 {
	if m != nil && m.BatchSize != nil {
		return *m.BatchSize
	}
	return 0
}

func (m *GetUpdatesMessage) GetFromProgressMarker() []*DataTypeProgressMarker {
	if m != nil {
		return m.FromProgressMarker
	}
	return nil
}

func (m *GetUpdatesMessage) GetStreaming() bool {
	if m != nil && m.Streaming != nil {
		return *m.Streaming
	}
	return Default_GetUpdatesMessage_Streaming
}

func (m *GetUpdatesMessage) GetNeedEncryptionKey() bool {
	if m != nil && m.NeedEncryptionKey != nil {
		return *m.NeedEncryptionKey
	}
	return Default_GetUpdatesMessage_NeedEncryptionKey
}

// Deprecated: Do not use.
func (m *GetUpdatesMessage) GetCreateMobileBookmarksFolder() bool {
	if m != nil && m.CreateMobileBookmarksFolder != nil {
		return *m.CreateMobileBookmarksFolder
	}
	return Default_GetUpdatesMessage_CreateMobileBookmarksFolder
}

func (m *GetUpdatesMessage) GetGetUpdatesOrigin() SyncEnums_GetUpdatesOrigin {
	if m != nil && m.GetUpdatesOrigin != nil {
		return *m.GetUpdatesOrigin
	}
	return SyncEnums_UNKNOWN_ORIGIN
}

func (m *GetUpdatesMessage) GetIsRetry() bool {
	if m != nil && m.IsRetry != nil {
		return *m.IsRetry
	}
	return Default_GetUpdatesMessage_IsRetry
}

func (m *GetUpdatesMessage) GetClientContexts() []*DataTypeContext {
	if m != nil {
		return m.ClientContexts
	}
	return nil
}

// Message from a client asking the server to clear its data.
type ClearServerDataMessage struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearServerDataMessage) Reset()         { *m = ClearServerDataMessage{} }
func (m *ClearServerDataMessage) String() string { return proto.CompactTextString(m) }
func (*ClearServerDataMessage) ProtoMessage()    {}
func (*ClearServerDataMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{10}
}

func (m *ClearServerDataMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearServerDataMessage.Unmarshal(m, b)
}
func (m *ClearServerDataMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearServerDataMessage.Marshal(b, m, deterministic)
}
func (m *ClearServerDataMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearServerDataMessage.Merge(m, src)
}
func (m *ClearServerDataMessage) XXX_Size() int {
	return xxx_messageInfo_ClearServerDataMessage.Size(m)
}
func (m *ClearServerDataMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearServerDataMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClearServerDataMessage proto.InternalMessageInfo

// Response to a ClearServerData request.
type ClearServerDataResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClearServerDataResponse) Reset()         { *m = ClearServerDataResponse{} }
func (m *ClearServerDataResponse) String() string { return proto.CompactTextString(m) }
func (*ClearServerDataResponse) ProtoMessage()    {}
func (*ClearServerDataResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{11}
}

func (m *ClearServerDataResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClearServerDataResponse.Unmarshal(m, b)
}
func (m *ClearServerDataResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClearServerDataResponse.Marshal(b, m, deterministic)
}
func (m *ClearServerDataResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClearServerDataResponse.Merge(m, src)
}
func (m *ClearServerDataResponse) XXX_Size() int {
	return xxx_messageInfo_ClearServerDataResponse.Size(m)
}
func (m *ClearServerDataResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClearServerDataResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClearServerDataResponse proto.InternalMessageInfo

// The client must preserve, store, and resend the chip bag with
// every request.  The server depends on the chip bag in order
// to precisely choreograph a client-server state machines.
//
// Because the client stores and sends this data on every request,
// the contents of the chip bag should be kept relatively small.
//
// If the server does not return a chip bag, the client must assume
// that there has been no change to the chip bag.  The client must
// resend the bag of chips it had prior on the next request.
//
// The client must make the chip bag durable if and only if it
// processes the response from the server.
type ChipBag struct {
	// Server chips are deliberately oqaque, allowing the server
	// to encapsulate its state machine logic.
	ServerChips          []byte   `protobuf:"bytes,1,opt,name=server_chips,json=serverChips" json:"server_chips,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ChipBag) Reset()         { *m = ChipBag{} }
func (m *ChipBag) String() string { return proto.CompactTextString(m) }
func (*ChipBag) ProtoMessage()    {}
func (*ChipBag) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{12}
}

func (m *ChipBag) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChipBag.Unmarshal(m, b)
}
func (m *ChipBag) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChipBag.Marshal(b, m, deterministic)
}
func (m *ChipBag) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChipBag.Merge(m, src)
}
func (m *ChipBag) XXX_Size() int {
	return xxx_messageInfo_ChipBag.Size(m)
}
func (m *ChipBag) XXX_DiscardUnknown() {
	xxx_messageInfo_ChipBag.DiscardUnknown(m)
}

var xxx_messageInfo_ChipBag proto.InternalMessageInfo

func (m *ChipBag) GetServerChips() []byte {
	if m != nil {
		return m.ServerChips
	}
	return nil
}

// Information about the syncer's state.
type ClientStatus struct {
	// Flag to indicate if the client has detected hierarchy conflcits.  The flag
	// is left unset if update application has not been attempted yet.
	//
	// The server should attempt to resolve any hierarchy conflicts when this flag
	// is set.  The client may not assume that any particular action will be
	// taken.  There is no guarantee the problem will be addressed in a reasonable
	// amount of time.
	HierarchyConflictDetected *bool `protobuf:"varint,1,opt,name=hierarchy_conflict_detected,json=hierarchyConflictDetected" json:"hierarchy_conflict_detected,omitempty"`
	// Whether the client has full sync (or, sync the feature) enabled or not.
	IsSyncFeatureEnabled *bool    `protobuf:"varint,2,opt,name=is_sync_feature_enabled,json=isSyncFeatureEnabled" json:"is_sync_feature_enabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientStatus) Reset()         { *m = ClientStatus{} }
func (m *ClientStatus) String() string { return proto.CompactTextString(m) }
func (*ClientStatus) ProtoMessage()    {}
func (*ClientStatus) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{13}
}

func (m *ClientStatus) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientStatus.Unmarshal(m, b)
}
func (m *ClientStatus) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientStatus.Marshal(b, m, deterministic)
}
func (m *ClientStatus) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientStatus.Merge(m, src)
}
func (m *ClientStatus) XXX_Size() int {
	return xxx_messageInfo_ClientStatus.Size(m)
}
func (m *ClientStatus) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientStatus.DiscardUnknown(m)
}

var xxx_messageInfo_ClientStatus proto.InternalMessageInfo

func (m *ClientStatus) GetHierarchyConflictDetected() bool {
	if m != nil && m.HierarchyConflictDetected != nil {
		return *m.HierarchyConflictDetected
	}
	return false
}

func (m *ClientStatus) GetIsSyncFeatureEnabled() bool {
	if m != nil && m.IsSyncFeatureEnabled != nil {
		return *m.IsSyncFeatureEnabled
	}
	return false
}

// A single datatype's sync context. Allows the datatype to pass along
// datatype specific information with its own server backend.
type DataTypeContext struct {
	// The type this context is associated with.
	DataTypeId *int32 `protobuf:"varint,1,opt,name=data_type_id,json=dataTypeId" json:"data_type_id,omitempty"`
	// The context for the datatype.
	Context []byte `protobuf:"bytes,2,opt,name=context" json:"context,omitempty"`
	// The version of the context.
	Version              *int64   `protobuf:"varint,3,opt,name=version" json:"version,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataTypeContext) Reset()         { *m = DataTypeContext{} }
func (m *DataTypeContext) String() string { return proto.CompactTextString(m) }
func (*DataTypeContext) ProtoMessage()    {}
func (*DataTypeContext) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{14}
}

func (m *DataTypeContext) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataTypeContext.Unmarshal(m, b)
}
func (m *DataTypeContext) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataTypeContext.Marshal(b, m, deterministic)
}
func (m *DataTypeContext) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataTypeContext.Merge(m, src)
}
func (m *DataTypeContext) XXX_Size() int {
	return xxx_messageInfo_DataTypeContext.Size(m)
}
func (m *DataTypeContext) XXX_DiscardUnknown() {
	xxx_messageInfo_DataTypeContext.DiscardUnknown(m)
}

var xxx_messageInfo_DataTypeContext proto.InternalMessageInfo

func (m *DataTypeContext) GetDataTypeId() int32 {
	if m != nil && m.DataTypeId != nil {
		return *m.DataTypeId
	}
	return 0
}

func (m *DataTypeContext) GetContext() []byte {
	if m != nil {
		return m.Context
	}
	return nil
}

func (m *DataTypeContext) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

type ClientToServerMessage struct {
	// |share| field is only used on the server for logging and can sometimes
	// contain empty string. It is still useful for logging username when it can't
	// be derived from access token in case of auth error.
	Share           *string `protobuf:"bytes,1,req,name=share" json:"share,omitempty"`
	ProtocolVersion *int32  `protobuf:"varint,2,opt,name=protocol_version,json=protocolVersion,def=52" json:"protocol_version,omitempty"`
	// Each ClientToServerMessage contains one request defined by the
	// message_contents. Each type has a corresponding message field that will be
	// present iff the message is of that type. E.g. a commit message will have a
	// message_contents of COMMIT and its commit field will be present.
	MessageContents *ClientToServerMessage_Contents `protobuf:"varint,3,req,name=message_contents,json=messageContents,enum=sync_pb.ClientToServerMessage_Contents" json:"message_contents,omitempty"`
	Commit          *CommitMessage                  `protobuf:"bytes,4,opt,name=commit" json:"commit,omitempty"`
	GetUpdates      *GetUpdatesMessage              `protobuf:"bytes,5,opt,name=get_updates,json=getUpdates" json:"get_updates,omitempty"`
	StoreBirthday   *string                         `protobuf:"bytes,7,opt,name=store_birthday,json=storeBirthday" json:"store_birthday,omitempty"`
	// The client sets this if it detects a sync issue. The server will tell it
	// if it should perform a refresh.
	SyncProblemDetected *bool `protobuf:"varint,8,opt,name=sync_problem_detected,json=syncProblemDetected,def=0" json:"sync_problem_detected,omitempty"`
	// Client side state information for debugging purpose.
	// This is only sent on the first getupdates of every sync cycle,
	// as an optimization to save bandwidth.
	DebugInfo *DebugInfo `protobuf:"bytes,10,opt,name=debug_info,json=debugInfo" json:"debug_info,omitempty"`
	// Per-client state for use by the server. Sent with every message sent to the
	// server.
	BagOfChips *ChipBag `protobuf:"bytes,11,opt,name=bag_of_chips,json=bagOfChips" json:"bag_of_chips,omitempty"`
	// Google API key.
	ApiKey *string `protobuf:"bytes,12,opt,name=api_key,json=apiKey" json:"api_key,omitempty"`
	// Client's self-reported state.
	// The client should set this on every message sent to the server, though its
	// member fields may often be unset.
	ClientStatus *ClientStatus `protobuf:"bytes,13,opt,name=client_status,json=clientStatus" json:"client_status,omitempty"`
	// The ID that our invalidation client used to identify itself to the server.
	// Sending the ID here allows the server to not send notifications of our own
	// changes to our invalidator.
	InvalidatorClientId *string `protobuf:"bytes,14,opt,name=invalidator_client_id,json=invalidatorClientId" json:"invalidator_client_id,omitempty"`
	// Identifies this ClientToServerMessage as a clear server data request. This
	// field is present when message_contents is CLEAR_SERVER_DATA.
	ClearServerData      *ClearServerDataMessage `protobuf:"bytes,15,opt,name=clear_server_data,json=clearServerData" json:"clear_server_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *ClientToServerMessage) Reset()         { *m = ClientToServerMessage{} }
func (m *ClientToServerMessage) String() string { return proto.CompactTextString(m) }
func (*ClientToServerMessage) ProtoMessage()    {}
func (*ClientToServerMessage) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{15}
}

func (m *ClientToServerMessage) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientToServerMessage.Unmarshal(m, b)
}
func (m *ClientToServerMessage) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientToServerMessage.Marshal(b, m, deterministic)
}
func (m *ClientToServerMessage) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientToServerMessage.Merge(m, src)
}
func (m *ClientToServerMessage) XXX_Size() int {
	return xxx_messageInfo_ClientToServerMessage.Size(m)
}
func (m *ClientToServerMessage) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientToServerMessage.DiscardUnknown(m)
}

var xxx_messageInfo_ClientToServerMessage proto.InternalMessageInfo

const Default_ClientToServerMessage_ProtocolVersion int32 = 52
const Default_ClientToServerMessage_SyncProblemDetected bool = false

func (m *ClientToServerMessage) GetShare() string {
	if m != nil && m.Share != nil {
		return *m.Share
	}
	return ""
}

func (m *ClientToServerMessage) GetProtocolVersion() int32 {
	if m != nil && m.ProtocolVersion != nil {
		return *m.ProtocolVersion
	}
	return Default_ClientToServerMessage_ProtocolVersion
}

func (m *ClientToServerMessage) GetMessageContents() ClientToServerMessage_Contents {
	if m != nil && m.MessageContents != nil {
		return *m.MessageContents
	}
	return ClientToServerMessage_COMMIT
}

func (m *ClientToServerMessage) GetCommit() *CommitMessage {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *ClientToServerMessage) GetGetUpdates() *GetUpdatesMessage {
	if m != nil {
		return m.GetUpdates
	}
	return nil
}

func (m *ClientToServerMessage) GetStoreBirthday() string {
	if m != nil && m.StoreBirthday != nil {
		return *m.StoreBirthday
	}
	return ""
}

func (m *ClientToServerMessage) GetSyncProblemDetected() bool {
	if m != nil && m.SyncProblemDetected != nil {
		return *m.SyncProblemDetected
	}
	return Default_ClientToServerMessage_SyncProblemDetected
}

func (m *ClientToServerMessage) GetDebugInfo() *DebugInfo {
	if m != nil {
		return m.DebugInfo
	}
	return nil
}

func (m *ClientToServerMessage) GetBagOfChips() *ChipBag {
	if m != nil {
		return m.BagOfChips
	}
	return nil
}

func (m *ClientToServerMessage) GetApiKey() string {
	if m != nil && m.ApiKey != nil {
		return *m.ApiKey
	}
	return ""
}

func (m *ClientToServerMessage) GetClientStatus() *ClientStatus {
	if m != nil {
		return m.ClientStatus
	}
	return nil
}

func (m *ClientToServerMessage) GetInvalidatorClientId() string {
	if m != nil && m.InvalidatorClientId != nil {
		return *m.InvalidatorClientId
	}
	return ""
}

func (m *ClientToServerMessage) GetClearServerData() *ClearServerDataMessage {
	if m != nil {
		return m.ClearServerData
	}
	return nil
}

// This request allows the client to convert a specific crash identifier
// into more general information (e.g. hash of the crashing call stack)
// suitable for upload in an (authenticated) DebugInfo event.
type GetCrashInfoRequest struct {
	// Id of the uploaded crash.
	CrashId *string `protobuf:"bytes,1,opt,name=crash_id,json=crashId" json:"crash_id,omitempty"`
	// Time that the crash occurred.
	CrashTimeMillis      *int64   `protobuf:"varint,2,opt,name=crash_time_millis,json=crashTimeMillis" json:"crash_time_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCrashInfoRequest) Reset()         { *m = GetCrashInfoRequest{} }
func (m *GetCrashInfoRequest) String() string { return proto.CompactTextString(m) }
func (*GetCrashInfoRequest) ProtoMessage()    {}
func (*GetCrashInfoRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{16}
}

func (m *GetCrashInfoRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCrashInfoRequest.Unmarshal(m, b)
}
func (m *GetCrashInfoRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCrashInfoRequest.Marshal(b, m, deterministic)
}
func (m *GetCrashInfoRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCrashInfoRequest.Merge(m, src)
}
func (m *GetCrashInfoRequest) XXX_Size() int {
	return xxx_messageInfo_GetCrashInfoRequest.Size(m)
}
func (m *GetCrashInfoRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCrashInfoRequest.DiscardUnknown(m)
}

var xxx_messageInfo_GetCrashInfoRequest proto.InternalMessageInfo

func (m *GetCrashInfoRequest) GetCrashId() string {
	if m != nil && m.CrashId != nil {
		return *m.CrashId
	}
	return ""
}

func (m *GetCrashInfoRequest) GetCrashTimeMillis() int64 {
	if m != nil && m.CrashTimeMillis != nil {
		return *m.CrashTimeMillis
	}
	return 0
}

// Proto to be written in its entirety to the debug info log.
type GetCrashInfoResponse struct {
	// Hash of the crashing call stack.
	StackId *string `protobuf:"bytes,1,opt,name=stack_id,json=stackId" json:"stack_id,omitempty"`
	// Time of the crash, potentially rounded to remove
	// significant bits.
	CrashTimeMillis      *int64   `protobuf:"varint,2,opt,name=crash_time_millis,json=crashTimeMillis" json:"crash_time_millis,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *GetCrashInfoResponse) Reset()         { *m = GetCrashInfoResponse{} }
func (m *GetCrashInfoResponse) String() string { return proto.CompactTextString(m) }
func (*GetCrashInfoResponse) ProtoMessage()    {}
func (*GetCrashInfoResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{17}
}

func (m *GetCrashInfoResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetCrashInfoResponse.Unmarshal(m, b)
}
func (m *GetCrashInfoResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetCrashInfoResponse.Marshal(b, m, deterministic)
}
func (m *GetCrashInfoResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetCrashInfoResponse.Merge(m, src)
}
func (m *GetCrashInfoResponse) XXX_Size() int {
	return xxx_messageInfo_GetCrashInfoResponse.Size(m)
}
func (m *GetCrashInfoResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetCrashInfoResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetCrashInfoResponse proto.InternalMessageInfo

func (m *GetCrashInfoResponse) GetStackId() string {
	if m != nil && m.StackId != nil {
		return *m.StackId
	}
	return ""
}

func (m *GetCrashInfoResponse) GetCrashTimeMillis() int64 {
	if m != nil && m.CrashTimeMillis != nil {
		return *m.CrashTimeMillis
	}
	return 0
}

type CommitResponse struct {
	Entryresponse        []*CommitResponse_EntryResponse `protobuf:"group,1,rep,name=EntryResponse,json=entryresponse" json:"entryresponse,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *CommitResponse) Reset()         { *m = CommitResponse{} }
func (m *CommitResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse) ProtoMessage()    {}
func (*CommitResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{18}
}

func (m *CommitResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse.Unmarshal(m, b)
}
func (m *CommitResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse.Merge(m, src)
}
func (m *CommitResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse.Size(m)
}
func (m *CommitResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse proto.InternalMessageInfo

func (m *CommitResponse) GetEntryresponse() []*CommitResponse_EntryResponse {
	if m != nil {
		return m.Entryresponse
	}
	return nil
}

type CommitResponse_EntryResponse struct {
	ResponseType *CommitResponse_ResponseType `protobuf:"varint,2,req,name=response_type,json=responseType,enum=sync_pb.CommitResponse_ResponseType" json:"response_type,omitempty"`
	// Sync servers may also return a new ID for an existing item, indicating
	// a new entry's been created to hold the data the client's sending up.
	IdString *string `protobuf:"bytes,3,opt,name=id_string,json=idString" json:"id_string,omitempty"`
	// should be filled if our parent was assigned a new ID.
	ParentIdString *string `protobuf:"bytes,4,opt,name=parent_id_string,json=parentIdString" json:"parent_id_string,omitempty"`
	// The item's current version.
	Version *int64 `protobuf:"varint,6,opt,name=version" json:"version,omitempty"`
	// Allows the server to move-aside an entry as it's being committed.
	// This name is the same as the name field returned within the SyncEntity
	// message in GetUpdatesResponse.
	Name *string `protobuf:"bytes,7,opt,name=name" json:"name,omitempty"`
	// This name is the same as the non_unique_name field returned within the
	// SyncEntity message in GetUpdatesResponse.
	NonUniqueName *string `protobuf:"bytes,8,opt,name=non_unique_name,json=nonUniqueName" json:"non_unique_name,omitempty"`
	ErrorMessage  *string `protobuf:"bytes,9,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	// Last modification time (in java time milliseconds).  Allows the server
	// to override the client-supplied mtime during a commit operation.
	Mtime *int64 `protobuf:"varint,10,opt,name=mtime" json:"mtime,omitempty"`
	// Datatype specific error (if any).
	DatatypeSpecificError *CommitResponse_EntryResponse_DatatypeSpecificError `protobuf:"bytes,11,opt,name=datatype_specific_error,json=datatypeSpecificError" json:"datatype_specific_error,omitempty"`
	XXX_NoUnkeyedLiteral  struct{}                                            `json:"-"`
	XXX_unrecognized      []byte                                              `json:"-"`
	XXX_sizecache         int32                                               `json:"-"`
}

func (m *CommitResponse_EntryResponse) Reset()         { *m = CommitResponse_EntryResponse{} }
func (m *CommitResponse_EntryResponse) String() string { return proto.CompactTextString(m) }
func (*CommitResponse_EntryResponse) ProtoMessage()    {}
func (*CommitResponse_EntryResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{18, 0}
}

func (m *CommitResponse_EntryResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse_EntryResponse.Unmarshal(m, b)
}
func (m *CommitResponse_EntryResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse_EntryResponse.Marshal(b, m, deterministic)
}
func (m *CommitResponse_EntryResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse_EntryResponse.Merge(m, src)
}
func (m *CommitResponse_EntryResponse) XXX_Size() int {
	return xxx_messageInfo_CommitResponse_EntryResponse.Size(m)
}
func (m *CommitResponse_EntryResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse_EntryResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse_EntryResponse proto.InternalMessageInfo

func (m *CommitResponse_EntryResponse) GetResponseType() CommitResponse_ResponseType {
	if m != nil && m.ResponseType != nil {
		return *m.ResponseType
	}
	return CommitResponse_SUCCESS
}

func (m *CommitResponse_EntryResponse) GetIdString() string {
	if m != nil && m.IdString != nil {
		return *m.IdString
	}
	return ""
}

func (m *CommitResponse_EntryResponse) GetParentIdString() string {
	if m != nil && m.ParentIdString != nil {
		return *m.ParentIdString
	}
	return ""
}

func (m *CommitResponse_EntryResponse) GetVersion() int64 {
	if m != nil && m.Version != nil {
		return *m.Version
	}
	return 0
}

func (m *CommitResponse_EntryResponse) GetName() string {
	if m != nil && m.Name != nil {
		return *m.Name
	}
	return ""
}

func (m *CommitResponse_EntryResponse) GetNonUniqueName() string {
	if m != nil && m.NonUniqueName != nil {
		return *m.NonUniqueName
	}
	return ""
}

func (m *CommitResponse_EntryResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *CommitResponse_EntryResponse) GetMtime() int64 {
	if m != nil && m.Mtime != nil {
		return *m.Mtime
	}
	return 0
}

func (m *CommitResponse_EntryResponse) GetDatatypeSpecificError() *CommitResponse_EntryResponse_DatatypeSpecificError {
	if m != nil {
		return m.DatatypeSpecificError
	}
	return nil
}

type CommitResponse_EntryResponse_DatatypeSpecificError struct {
	// Types that are valid to be assigned to DatatypeError:
	//	*CommitResponse_EntryResponse_DatatypeSpecificError_SharingMessageError
	DatatypeError        isCommitResponse_EntryResponse_DatatypeSpecificError_DatatypeError `protobuf_oneof:"datatype_error"`
	XXX_NoUnkeyedLiteral struct{}                                                           `json:"-"`
	XXX_unrecognized     []byte                                                             `json:"-"`
	XXX_sizecache        int32                                                              `json:"-"`
}

func (m *CommitResponse_EntryResponse_DatatypeSpecificError) Reset() {
	*m = CommitResponse_EntryResponse_DatatypeSpecificError{}
}
func (m *CommitResponse_EntryResponse_DatatypeSpecificError) String() string {
	return proto.CompactTextString(m)
}
func (*CommitResponse_EntryResponse_DatatypeSpecificError) ProtoMessage() {}
func (*CommitResponse_EntryResponse_DatatypeSpecificError) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{18, 0, 0}
}

func (m *CommitResponse_EntryResponse_DatatypeSpecificError) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError.Unmarshal(m, b)
}
func (m *CommitResponse_EntryResponse_DatatypeSpecificError) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError.Marshal(b, m, deterministic)
}
func (m *CommitResponse_EntryResponse_DatatypeSpecificError) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError.Merge(m, src)
}
func (m *CommitResponse_EntryResponse_DatatypeSpecificError) XXX_Size() int {
	return xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError.Size(m)
}
func (m *CommitResponse_EntryResponse_DatatypeSpecificError) XXX_DiscardUnknown() {
	xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError.DiscardUnknown(m)
}

var xxx_messageInfo_CommitResponse_EntryResponse_DatatypeSpecificError proto.InternalMessageInfo

type isCommitResponse_EntryResponse_DatatypeSpecificError_DatatypeError interface {
	isCommitResponse_EntryResponse_DatatypeSpecificError_DatatypeError()
}

type CommitResponse_EntryResponse_DatatypeSpecificError_SharingMessageError struct {
	SharingMessageError *SharingMessageCommitError `protobuf:"bytes,1,opt,name=sharing_message_error,json=sharingMessageError,oneof"`
}

func (*CommitResponse_EntryResponse_DatatypeSpecificError_SharingMessageError) isCommitResponse_EntryResponse_DatatypeSpecificError_DatatypeError() {
}

func (m *CommitResponse_EntryResponse_DatatypeSpecificError) GetDatatypeError() isCommitResponse_EntryResponse_DatatypeSpecificError_DatatypeError {
	if m != nil {
		return m.DatatypeError
	}
	return nil
}

func (m *CommitResponse_EntryResponse_DatatypeSpecificError) GetSharingMessageError() *SharingMessageCommitError {
	if x, ok := m.GetDatatypeError().(*CommitResponse_EntryResponse_DatatypeSpecificError_SharingMessageError); ok {
		return x.SharingMessageError
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*CommitResponse_EntryResponse_DatatypeSpecificError) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*CommitResponse_EntryResponse_DatatypeSpecificError_SharingMessageError)(nil),
	}
}

type GetUpdatesResponse struct {
	// New sync entries that the client should apply.
	Entries []*SyncEntity `protobuf:"bytes,1,rep,name=entries" json:"entries,omitempty"`
	// Approximate count of changes remaining - use this for UI feedback.
	// If present and zero, this estimate is firm: the server has no changes
	// after the current batch.
	ChangesRemaining *int64 `protobuf:"varint,4,opt,name=changes_remaining,json=changesRemaining" json:"changes_remaining,omitempty"`
	// Opaque, per-datatype timestamp-like tokens.  Clients should retain and
	// persist the values returned in this field, and present them back to the
	// server to indicate the starting point for future update requests.
	//
	// This will be sent only if the client provided |from_progress_marker|
	// in the update request.
	//
	// The server may provide a new progress marker even if this is the end of
	// the batch, or if there were no new updates on the server; and the client
	// must save these.  If the server does not provide a |new_progress_marker|
	// value for a particular datatype, when the request provided a
	// |from_progress_marker| value for that datatype, the client should
	// interpret this to mean "no change from the previous state" and retain its
	// previous progress-marker value for that datatype.
	//
	// Progress markers in the context of a response will never have the
	// |timestamp_token_for_migration| field set.
	NewProgressMarker []*DataTypeProgressMarker `protobuf:"bytes,5,rep,name=new_progress_marker,json=newProgressMarker" json:"new_progress_marker,omitempty"`
	// The current encryption keys associated with this account. Will be set if
	// the GetUpdatesMessage in the request had need_encryption_key == true or
	// the server has updated the set of encryption keys (e.g. due to a key
	// rotation).
	EncryptionKeys [][]byte `protobuf:"bytes,6,rep,name=encryption_keys,json=encryptionKeys" json:"encryption_keys,omitempty"`
	// Set of optional datatype contexts server mutations.
	ContextMutations     []*DataTypeContext `protobuf:"bytes,7,rep,name=context_mutations,json=contextMutations" json:"context_mutations,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *GetUpdatesResponse) Reset()         { *m = GetUpdatesResponse{} }
func (m *GetUpdatesResponse) String() string { return proto.CompactTextString(m) }
func (*GetUpdatesResponse) ProtoMessage()    {}
func (*GetUpdatesResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{19}
}

func (m *GetUpdatesResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_GetUpdatesResponse.Unmarshal(m, b)
}
func (m *GetUpdatesResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_GetUpdatesResponse.Marshal(b, m, deterministic)
}
func (m *GetUpdatesResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_GetUpdatesResponse.Merge(m, src)
}
func (m *GetUpdatesResponse) XXX_Size() int {
	return xxx_messageInfo_GetUpdatesResponse.Size(m)
}
func (m *GetUpdatesResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_GetUpdatesResponse.DiscardUnknown(m)
}

var xxx_messageInfo_GetUpdatesResponse proto.InternalMessageInfo

func (m *GetUpdatesResponse) GetEntries() []*SyncEntity {
	if m != nil {
		return m.Entries
	}
	return nil
}

func (m *GetUpdatesResponse) GetChangesRemaining() int64 {
	if m != nil && m.ChangesRemaining != nil {
		return *m.ChangesRemaining
	}
	return 0
}

func (m *GetUpdatesResponse) GetNewProgressMarker() []*DataTypeProgressMarker {
	if m != nil {
		return m.NewProgressMarker
	}
	return nil
}

func (m *GetUpdatesResponse) GetEncryptionKeys() [][]byte {
	if m != nil {
		return m.EncryptionKeys
	}
	return nil
}

func (m *GetUpdatesResponse) GetContextMutations() []*DataTypeContext {
	if m != nil {
		return m.ContextMutations
	}
	return nil
}

type ClientToServerResponse struct {
	Commit     *CommitResponse     `protobuf:"bytes,1,opt,name=commit" json:"commit,omitempty"`
	GetUpdates *GetUpdatesResponse `protobuf:"bytes,2,opt,name=get_updates,json=getUpdates" json:"get_updates,omitempty"`
	// Up until protocol_version 24, the default was SUCCESS which made it
	// impossible to add new enum values since older clients would parse any
	// out-of-range value as SUCCESS. Starting with 25, unless explicitly set,
	// the error_code will be UNKNOWN so that clients know when they're
	// out-of-date. Note also that when using protocol_version < 25,
	// TRANSIENT_ERROR is not supported. Instead, the server sends back a HTTP
	// 400 error code. This is deprecated now.
	ErrorCode    *SyncEnums_ErrorType `protobuf:"varint,4,opt,name=error_code,json=errorCode,enum=sync_pb.SyncEnums_ErrorType,def=100" json:"error_code,omitempty"`
	ErrorMessage *string              `protobuf:"bytes,5,opt,name=error_message,json=errorMessage" json:"error_message,omitempty"`
	// Opaque store ID; if it changes, the contents of the client's cache
	// is meaningless to this server.  This happens most typically when
	// you switch from one storage backend instance (say, a test instance)
	// to another (say, the official instance).
	StoreBirthday *string        `protobuf:"bytes,6,opt,name=store_birthday,json=storeBirthday" json:"store_birthday,omitempty"`
	ClientCommand *ClientCommand `protobuf:"bytes,7,opt,name=client_command,json=clientCommand" json:"client_command,omitempty"`
	ProfilingData *ProfilingData `protobuf:"bytes,8,opt,name=profiling_data,json=profilingData" json:"profiling_data,omitempty"`
	// The data types whose storage has been migrated.  Present when the value of
	// error_code is MIGRATION_DONE.
	MigratedDataTypeId []int32                       `protobuf:"varint,12,rep,name=migrated_data_type_id,json=migratedDataTypeId" json:"migrated_data_type_id,omitempty"`
	Error              *ClientToServerResponse_Error `protobuf:"bytes,13,opt,name=error" json:"error,omitempty"`
	// The new per-client state for this client. If set, should be persisted and
	// sent with any subsequent ClientToServerMessages.
	NewBagOfChips *ChipBag `protobuf:"bytes,14,opt,name=new_bag_of_chips,json=newBagOfChips" json:"new_bag_of_chips,omitempty"`
	// Present if this ClientToServerResponse is in response to a ClearServerData
	// request.
	ClearServerData      *ClearServerDataResponse `protobuf:"bytes,15,opt,name=clear_server_data,json=clearServerData" json:"clear_server_data,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                 `json:"-"`
	XXX_unrecognized     []byte                   `json:"-"`
	XXX_sizecache        int32                    `json:"-"`
}

func (m *ClientToServerResponse) Reset()         { *m = ClientToServerResponse{} }
func (m *ClientToServerResponse) String() string { return proto.CompactTextString(m) }
func (*ClientToServerResponse) ProtoMessage()    {}
func (*ClientToServerResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{20}
}

func (m *ClientToServerResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientToServerResponse.Unmarshal(m, b)
}
func (m *ClientToServerResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientToServerResponse.Marshal(b, m, deterministic)
}
func (m *ClientToServerResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientToServerResponse.Merge(m, src)
}
func (m *ClientToServerResponse) XXX_Size() int {
	return xxx_messageInfo_ClientToServerResponse.Size(m)
}
func (m *ClientToServerResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientToServerResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ClientToServerResponse proto.InternalMessageInfo

const Default_ClientToServerResponse_ErrorCode SyncEnums_ErrorType = SyncEnums_UNKNOWN

func (m *ClientToServerResponse) GetCommit() *CommitResponse {
	if m != nil {
		return m.Commit
	}
	return nil
}

func (m *ClientToServerResponse) GetGetUpdates() *GetUpdatesResponse {
	if m != nil {
		return m.GetUpdates
	}
	return nil
}

func (m *ClientToServerResponse) GetErrorCode() SyncEnums_ErrorType {
	if m != nil && m.ErrorCode != nil {
		return *m.ErrorCode
	}
	return Default_ClientToServerResponse_ErrorCode
}

func (m *ClientToServerResponse) GetErrorMessage() string {
	if m != nil && m.ErrorMessage != nil {
		return *m.ErrorMessage
	}
	return ""
}

func (m *ClientToServerResponse) GetStoreBirthday() string {
	if m != nil && m.StoreBirthday != nil {
		return *m.StoreBirthday
	}
	return ""
}

func (m *ClientToServerResponse) GetClientCommand() *ClientCommand {
	if m != nil {
		return m.ClientCommand
	}
	return nil
}

func (m *ClientToServerResponse) GetProfilingData() *ProfilingData {
	if m != nil {
		return m.ProfilingData
	}
	return nil
}

func (m *ClientToServerResponse) GetMigratedDataTypeId() []int32 {
	if m != nil {
		return m.MigratedDataTypeId
	}
	return nil
}

func (m *ClientToServerResponse) GetError() *ClientToServerResponse_Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *ClientToServerResponse) GetNewBagOfChips() *ChipBag {
	if m != nil {
		return m.NewBagOfChips
	}
	return nil
}

func (m *ClientToServerResponse) GetClearServerData() *ClearServerDataResponse {
	if m != nil {
		return m.ClearServerData
	}
	return nil
}

type ClientToServerResponse_Error struct {
	ErrorType        *SyncEnums_ErrorType `protobuf:"varint,1,opt,name=error_type,json=errorType,enum=sync_pb.SyncEnums_ErrorType,def=100" json:"error_type,omitempty"`
	ErrorDescription *string              `protobuf:"bytes,2,opt,name=error_description,json=errorDescription" json:"error_description,omitempty"`
	Url              *string              `protobuf:"bytes,3,opt,name=url" json:"url,omitempty"`
	Action           *SyncEnums_Action    `protobuf:"varint,4,opt,name=action,enum=sync_pb.SyncEnums_Action,def=5" json:"action,omitempty"`
	// Currently meaningful if |error_type| is throttled or partial_failure.
	// In the throttled case, if this field is absent then the whole client
	// (all datatypes) is throttled.
	// In the partial_failure case, this field denotes partial failures. The
	// client should retry those datatypes with exponential backoff.
	ErrorDataTypeIds     []int32  `protobuf:"varint,5,rep,name=error_data_type_ids,json=errorDataTypeIds" json:"error_data_type_ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ClientToServerResponse_Error) Reset()         { *m = ClientToServerResponse_Error{} }
func (m *ClientToServerResponse_Error) String() string { return proto.CompactTextString(m) }
func (*ClientToServerResponse_Error) ProtoMessage()    {}
func (*ClientToServerResponse_Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{20, 0}
}

func (m *ClientToServerResponse_Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ClientToServerResponse_Error.Unmarshal(m, b)
}
func (m *ClientToServerResponse_Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ClientToServerResponse_Error.Marshal(b, m, deterministic)
}
func (m *ClientToServerResponse_Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ClientToServerResponse_Error.Merge(m, src)
}
func (m *ClientToServerResponse_Error) XXX_Size() int {
	return xxx_messageInfo_ClientToServerResponse_Error.Size(m)
}
func (m *ClientToServerResponse_Error) XXX_DiscardUnknown() {
	xxx_messageInfo_ClientToServerResponse_Error.DiscardUnknown(m)
}

var xxx_messageInfo_ClientToServerResponse_Error proto.InternalMessageInfo

const Default_ClientToServerResponse_Error_ErrorType SyncEnums_ErrorType = SyncEnums_UNKNOWN
const Default_ClientToServerResponse_Error_Action SyncEnums_Action = SyncEnums_UNKNOWN_ACTION

func (m *ClientToServerResponse_Error) GetErrorType() SyncEnums_ErrorType {
	if m != nil && m.ErrorType != nil {
		return *m.ErrorType
	}
	return Default_ClientToServerResponse_Error_ErrorType
}

func (m *ClientToServerResponse_Error) GetErrorDescription() string {
	if m != nil && m.ErrorDescription != nil {
		return *m.ErrorDescription
	}
	return ""
}

func (m *ClientToServerResponse_Error) GetUrl() string {
	if m != nil && m.Url != nil {
		return *m.Url
	}
	return ""
}

func (m *ClientToServerResponse_Error) GetAction() SyncEnums_Action {
	if m != nil && m.Action != nil {
		return *m.Action
	}
	return Default_ClientToServerResponse_Error_Action
}

func (m *ClientToServerResponse_Error) GetErrorDataTypeIds() []int32 {
	if m != nil {
		return m.ErrorDataTypeIds
	}
	return nil
}

// A message to notify the server of certain sync events. Idempotent. Send these
// to the /event endpoint.
type EventRequest struct {
	SyncDisabled         *SyncDisabledEvent `protobuf:"bytes,1,opt,name=sync_disabled,json=syncDisabled" json:"sync_disabled,omitempty"`
	XXX_NoUnkeyedLiteral struct{}           `json:"-"`
	XXX_unrecognized     []byte             `json:"-"`
	XXX_sizecache        int32              `json:"-"`
}

func (m *EventRequest) Reset()         { *m = EventRequest{} }
func (m *EventRequest) String() string { return proto.CompactTextString(m) }
func (*EventRequest) ProtoMessage()    {}
func (*EventRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{21}
}

func (m *EventRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventRequest.Unmarshal(m, b)
}
func (m *EventRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventRequest.Marshal(b, m, deterministic)
}
func (m *EventRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventRequest.Merge(m, src)
}
func (m *EventRequest) XXX_Size() int {
	return xxx_messageInfo_EventRequest.Size(m)
}
func (m *EventRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_EventRequest.DiscardUnknown(m)
}

var xxx_messageInfo_EventRequest proto.InternalMessageInfo

func (m *EventRequest) GetSyncDisabled() *SyncDisabledEvent {
	if m != nil {
		return m.SyncDisabled
	}
	return nil
}

type EventResponse struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EventResponse) Reset()         { *m = EventResponse{} }
func (m *EventResponse) String() string { return proto.CompactTextString(m) }
func (*EventResponse) ProtoMessage()    {}
func (*EventResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{22}
}

func (m *EventResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EventResponse.Unmarshal(m, b)
}
func (m *EventResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EventResponse.Marshal(b, m, deterministic)
}
func (m *EventResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EventResponse.Merge(m, src)
}
func (m *EventResponse) XXX_Size() int {
	return xxx_messageInfo_EventResponse.Size(m)
}
func (m *EventResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_EventResponse.DiscardUnknown(m)
}

var xxx_messageInfo_EventResponse proto.InternalMessageInfo

// A message indicating that the sync engine has been disabled on a client.
type SyncDisabledEvent struct {
	// The GUID that identifies the sync client.
	CacheGuid *string `protobuf:"bytes,1,opt,name=cache_guid,json=cacheGuid" json:"cache_guid,omitempty"`
	// The store birthday that the client was using before disabling sync.
	StoreBirthday        *string  `protobuf:"bytes,2,opt,name=store_birthday,json=storeBirthday" json:"store_birthday,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncDisabledEvent) Reset()         { *m = SyncDisabledEvent{} }
func (m *SyncDisabledEvent) String() string { return proto.CompactTextString(m) }
func (*SyncDisabledEvent) ProtoMessage()    {}
func (*SyncDisabledEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_5273b98214de8075, []int{23}
}

func (m *SyncDisabledEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SyncDisabledEvent.Unmarshal(m, b)
}
func (m *SyncDisabledEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SyncDisabledEvent.Marshal(b, m, deterministic)
}
func (m *SyncDisabledEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncDisabledEvent.Merge(m, src)
}
func (m *SyncDisabledEvent) XXX_Size() int {
	return xxx_messageInfo_SyncDisabledEvent.Size(m)
}
func (m *SyncDisabledEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncDisabledEvent.DiscardUnknown(m)
}

var xxx_messageInfo_SyncDisabledEvent proto.InternalMessageInfo

func (m *SyncDisabledEvent) GetCacheGuid() string {
	if m != nil && m.CacheGuid != nil {
		return *m.CacheGuid
	}
	return ""
}

func (m *SyncDisabledEvent) GetStoreBirthday() string {
	if m != nil && m.StoreBirthday != nil {
		return *m.StoreBirthday
	}
	return ""
}

func init() {
	proto.RegisterEnum("sync_pb.GarbageCollectionDirective_Type", GarbageCollectionDirective_Type_name, GarbageCollectionDirective_Type_value)
	proto.RegisterEnum("sync_pb.ClientToServerMessage_Contents", ClientToServerMessage_Contents_name, ClientToServerMessage_Contents_value)
	proto.RegisterEnum("sync_pb.CommitResponse_ResponseType", CommitResponse_ResponseType_name, CommitResponse_ResponseType_value)
	proto.RegisterType((*ProfilingData)(nil), "sync_pb.ProfilingData")
	proto.RegisterType((*EntitySpecifics)(nil), "sync_pb.EntitySpecifics")
	proto.RegisterType((*SyncEntity)(nil), "sync_pb.SyncEntity")
	proto.RegisterType((*ChromiumExtensionsActivity)(nil), "sync_pb.ChromiumExtensionsActivity")
	proto.RegisterType((*ClientConfigParams)(nil), "sync_pb.ClientConfigParams")
	proto.RegisterType((*CommitMessage)(nil), "sync_pb.CommitMessage")
	proto.RegisterType((*GetUpdateTriggers)(nil), "sync_pb.GetUpdateTriggers")
	proto.RegisterType((*GarbageCollectionDirective)(nil), "sync_pb.GarbageCollectionDirective")
	proto.RegisterType((*DataTypeProgressMarker)(nil), "sync_pb.DataTypeProgressMarker")
	proto.RegisterType((*GetUpdatesMessage)(nil), "sync_pb.GetUpdatesMessage")
	proto.RegisterType((*ClearServerDataMessage)(nil), "sync_pb.ClearServerDataMessage")
	proto.RegisterType((*ClearServerDataResponse)(nil), "sync_pb.ClearServerDataResponse")
	proto.RegisterType((*ChipBag)(nil), "sync_pb.ChipBag")
	proto.RegisterType((*ClientStatus)(nil), "sync_pb.ClientStatus")
	proto.RegisterType((*DataTypeContext)(nil), "sync_pb.DataTypeContext")
	proto.RegisterType((*ClientToServerMessage)(nil), "sync_pb.ClientToServerMessage")
	proto.RegisterType((*GetCrashInfoRequest)(nil), "sync_pb.GetCrashInfoRequest")
	proto.RegisterType((*GetCrashInfoResponse)(nil), "sync_pb.GetCrashInfoResponse")
	proto.RegisterType((*CommitResponse)(nil), "sync_pb.CommitResponse")
	proto.RegisterType((*CommitResponse_EntryResponse)(nil), "sync_pb.CommitResponse.EntryResponse")
	proto.RegisterType((*CommitResponse_EntryResponse_DatatypeSpecificError)(nil), "sync_pb.CommitResponse.EntryResponse.DatatypeSpecificError")
	proto.RegisterType((*GetUpdatesResponse)(nil), "sync_pb.GetUpdatesResponse")
	proto.RegisterType((*ClientToServerResponse)(nil), "sync_pb.ClientToServerResponse")
	proto.RegisterType((*ClientToServerResponse_Error)(nil), "sync_pb.ClientToServerResponse.Error")
	proto.RegisterType((*EventRequest)(nil), "sync_pb.EventRequest")
	proto.RegisterType((*EventResponse)(nil), "sync_pb.EventResponse")
	proto.RegisterType((*SyncDisabledEvent)(nil), "sync_pb.SyncDisabledEvent")
}

func init() {
	proto.RegisterFile("sync.proto", fileDescriptor_5273b98214de8075)
}

var fileDescriptor_5273b98214de8075 = []byte{
	// 4570 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xa4, 0x5a, 0x5d, 0x8c, 0x24, 0xd7,
	0x55, 0xf6, 0xcc, 0x74, 0xcf, 0xf4, 0x9c, 0xe9, 0x9f, 0x9a, 0x3b, 0x33, 0xbb, 0x35, 0xb3, 0xde,
	0x78, 0xb6, 0xd7, 0x76, 0x36, 0x5e, 0x7b, 0x6c, 0x6f, 0xec, 0x04, 0xaf, 0x89, 0x71, 0x6f, 0x4f,
	0xef, 0x6e, 0xcf, 0xee, 0xfc, 0xb8, 0xa6, 0xd7, 0x1b, 0x23, 0xa2, 0xca, 0x9d, 0xaa, 0xdb, 0x3d,
	0x97, 0xe9, 0xae, 0x6a, 0xdf, 0x7b, 0x7b, 0xc7, 0x93, 0x27, 0x42, 0x84, 0x08, 0x04, 0x01, 0x0f,
	0x09, 0x48, 0x3c, 0x80, 0x62, 0x21, 0x63, 0x9c, 0xbc, 0x60, 0x59, 0x42, 0x8a, 0x44, 0x08, 0x2f,
	0x44, 0x91, 0x40, 0x48, 0x51, 0x10, 0x79, 0x00, 0x4b, 0x91, 0x10, 0x44, 0x02, 0x07, 0x10, 0x42,
	0x56, 0x20, 0x8a, 0xd0, 0xfd, 0xa9, 0xdf, 0xee, 0x59, 0x6c, 0xf1, 0xd6, 0x75, 0xbe, 0xef, 0x9c,
	0xba, 0x3f, 0xe7, 0x9c, 0x7b, 0xce, 0xad, 0x06, 0xe0, 0x27, 0x81, 0xb7, 0x31, 0x64, 0xa1, 0x08,
	0xd1, 0x9c, 0xfc, 0xed, 0x0e, 0x0f, 0xd6, 0x6c, 0x3c, 0x1c, 0xba, 0x7d, 0xca, 0x85, 0xcb, 0x87,
	0xc4, 0xa3, 0x5d, 0xea, 0x71, 0x4d, 0x59, 0x5b, 0x97, 0x48, 0x10, 0x0a, 0x29, 0xc3, 0x82, 0x86,
	0xc1, 0x18, 0xe3, 0x9c, 0x64, 0x70, 0x22, 0x04, 0x0d, 0x7a, 0x63, 0xe0, 0x92, 0x02, 0xc7, 0x34,
	0x98, 0xe7, 0x0e, 0xb1, 0x77, 0x84, 0x7b, 0x64, 0x0c, 0xb4, 0xf1, 0x48, 0x84, 0x5d, 0xda, 0xef,
	0x8f, 0x23, 0x07, 0x61, 0x78, 0x34, 0xc0, 0xec, 0x68, 0x0c, 0x59, 0xf1, 0xfa, 0x94, 0x04, 0xc2,
	0xf5, 0xc2, 0xc1, 0x00, 0x07, 0x7e, 0x24, 0x3e, 0x6b, 0xc4, 0x3e, 0x39, 0x18, 0xf5, 0x5c, 0x1a,
	0x74, 0xc3, 0x68, 0x00, 0x3e, 0xb9, 0x47, 0x3d, 0xa2, 0x44, 0x63, 0xc6, 0xd6, 0x7c, 0xea, 0xc9,
	0x89, 0x62, 0x76, 0x32, 0x86, 0x59, 0x24, 0xf0, 0xd8, 0xc9, 0x50, 0xc2, 0x91, 0x29, 0xf2, 0xda,
	0x90, 0x30, 0x3a, 0x20, 0x81, 0xe0, 0x63, 0xf4, 0x0b, 0xe4, 0x35, 0x41, 0x02, 0xae, 0x56, 0xed,
	0x94, 0x05, 0x5a, 0x4d, 0x51, 0x72, 0xd0, 0xf9, 0x2e, 0xbe, 0x47, 0xbd, 0x30, 0x70, 0xe9, 0x60,
	0xd2, 0x42, 0xad, 0x47, 0xb0, 0x60, 0xd8, 0x3b, 0x9a, 0x64, 0xfb, 0x7c, 0x8f, 0x08, 0x77, 0x34,
	0xf4, 0xb1, 0x20, 0xdc, 0xf5, 0x70, 0xbf, 0x4f, 0x58, 0x7a, 0x15, 0x2e, 0x1d, 0x52, 0x2e, 0x42,
	0x76, 0xe2, 0xfa, 0xa4, 0x4f, 0x04, 0x71, 0x7d, 0xca, 0x88, 0x27, 0xe8, 0xbd, 0xf1, 0x57, 0x3d,
	0x3c, 0xc0, 0x01, 0xee, 0x11, 0xdf, 0x1d, 0x71, 0xc2, 0x4e, 0x9d, 0xca, 0xe5, 0x2c, 0xeb, 0x10,
	0x33, 0xe2, 0x9f, 0x4a, 0x7e, 0x30, 0x4b, 0xce, 0xa1, 0x8f, 0x66, 0xd0, 0xe3, 0x43, 0x2a, 0xc8,
	0x44, 0xef, 0x3c, 0x13, 0xd0, 0x5e, 0xc8, 0xe8, 0xf8, 0xcc, 0x43, 0xee, 0x0e, 0x19, 0xe9, 0x12,
	0x46, 0x02, 0x6f, 0x7c, 0x3e, 0x8f, 0x2a, 0x98, 0x86, 0x8c, 0x8a, 0x93, 0xfb, 0xf1, 0xec, 0x21,
	0xe6, 0xfc, 0x38, 0x64, 0xfe, 0xb8, 0x93, 0xdc, 0x47, 0xeb, 0xec, 0x90, 0xd1, 0x40, 0x4c, 0x98,
	0xd5, 0xc5, 0x0f, 0xf2, 0xce, 0x07, 0x19, 0xc1, 0xbe, 0x5c, 0xb1, 0x89, 0x13, 0x3e, 0xcf, 0x09,
	0x66, 0xde, 0xa1, 0x4b, 0x82, 0x1e, 0x0d, 0xc6, 0x95, 0x3f, 0xc2, 0x89, 0x37, 0x52, 0x6f, 0x20,
	0xf7, 0xa4, 0xe7, 0x8f, 0xf9, 0x0c, 0x27, 0x81, 0xef, 0x0a, 0x7c, 0xe0, 0x8a, 0xd0, 0xe5, 0xa4,
	0xdf, 0x1d, 0x1f, 0x3c, 0x27, 0x7c, 0xa2, 0x37, 0x3e, 0x24, 0x37, 0x54, 0x8e, 0x6b, 0x40, 0x38,
	0x9f, 0xe4, 0x8f, 0x96, 0x4a, 0x26, 0x24, 0x18, 0x0d, 0x22, 0xc9, 0xe3, 0x52, 0x42, 0xfc, 0x6c,
	0xfa, 0x90, 0x09, 0x61, 0x62, 0xdc, 0x5d, 0x9c, 0xc4, 0x1e, 0x8b, 0x74, 0x71, 0x48, 0x06, 0xe3,
	0xef, 0x5e, 0x15, 0x27, 0x43, 0xe9, 0x2d, 0x6c, 0x3c, 0x6b, 0xac, 0x8c, 0x02, 0xfa, 0xea, 0x88,
	0xb8, 0xc3, 0x90, 0xd3, 0x54, 0xdc, 0x3e, 0xa8, 0x3c, 0xcb, 0x0b, 0x03, 0x3e, 0x69, 0x9d, 0xd6,
	0x14, 0x3a, 0x79, 0x0d, 0xcf, 0x1e, 0x93, 0x03, 0x77, 0x52, 0x5a, 0xab, 0x1f, 0xd3, 0x2e, 0x95,
	0x26, 0xbb, 0xb4, 0x37, 0x62, 0x13, 0xc7, 0x5f, 0xff, 0xa3, 0x69, 0xa8, 0xec, 0x31, 0x99, 0xdf,
	0x68, 0xd0, 0xdb, 0xc4, 0x02, 0xa3, 0x27, 0x61, 0x79, 0x40, 0x04, 0x76, 0x7d, 0x2c, 0xb0, 0x7b,
	0xcc, 0xa8, 0x20, 0xae, 0xa0, 0x03, 0x62, 0x4f, 0xad, 0x4f, 0x5d, 0x9a, 0x71, 0x16, 0x25, 0x26,
	0x79, 0x77, 0x25, 0xd2, 0xa1, 0x03, 0x22, 0x15, 0xba, 0xb4, 0x4f, 0xc6, 0x14, 0xa6, 0xb5, 0x82,
	0xc4, 0xb2, 0x0a, 0x97, 0xc0, 0x52, 0xd3, 0xe9, 0x87, 0xe1, 0xd1, 0x68, 0xa8, 0xc9, 0x33, 0x8a,
	0x5c, 0x95, 0xf2, 0xdb, 0x4a, 0xac, 0x98, 0x4f, 0xc0, 0x52, 0x32, 0x16, 0xe9, 0x87, 0x9a, 0x5c,
	0x50, 0x64, 0x2b, 0x1a, 0x8a, 0x43, 0xb0, 0x1f, 0xd1, 0x93, 0x91, 0x24, 0xf4, 0xa2, 0xa6, 0x47,
	0x03, 0x89, 0xe9, 0x8f, 0x03, 0x12, 0xa1, 0xc0, 0x7d, 0x97, 0x91, 0x57, 0x47, 0x84, 0x0b, 0xcd,
	0x9e, 0xd5, 0x6c, 0x85, 0x38, 0x1a, 0x90, 0xec, 0xfa, 0x1f, 0xae, 0x41, 0xad, 0x15, 0x08, 0x2a,
	0x4e, 0xf6, 0xa3, 0x35, 0x44, 0xcf, 0xc0, 0xbc, 0x49, 0xc0, 0xc4, 0x57, 0x0b, 0xb4, 0x70, 0xe5,
	0xcc, 0x86, 0x39, 0xc3, 0x36, 0x5a, 0x11, 0xa2, 0x5e, 0x9a, 0x10, 0xd1, 0x55, 0x28, 0x45, 0x67,
	0x8a, 0xfd, 0x1f, 0xef, 0x6b, 0xb5, 0xb5, 0x58, 0xad, 0x61, 0xa0, 0xf8, 0x2d, 0x37, 0x1f, 0x70,
	0x62, 0xbe, 0xd4, 0x8d, 0x4e, 0x1d, 0xfb, 0x8b, 0x9f, 0x9f, 0xce, 0xe9, 0x5e, 0x33, 0x50, 0x46,
	0x37, 0xe2, 0xa3, 0x17, 0x01, 0x92, 0x38, 0xb7, 0xff, 0xf2, 0x0d, 0xad, 0xfd, 0x60, 0xac, 0xbd,
	0x17, 0x83, 0x69, 0xfd, 0x94, 0x0e, 0x7a, 0x1e, 0xe6, 0x63, 0xc7, 0xb6, 0xff, 0xfa, 0x9b, 0xf9,
	0xd7, 0x77, 0x24, 0x76, 0x87, 0x65, 0x87, 0x2e, 0x8c, 0x10, 0x3d, 0x0d, 0x45, 0x15, 0x2c, 0xf6,
	0x7f, 0xff, 0x85, 0x56, 0x3c, 0x9b, 0x28, 0x4a, 0x79, 0x5a, 0x4b, 0x33, 0xd1, 0x2d, 0xb0, 0xf2,
	0xc7, 0xbd, 0xfd, 0x4b, 0x3f, 0xd0, 0xda, 0x76, 0xb2, 0x62, 0xc3, 0xe1, 0x4e, 0x8a, 0x71, 0x6d,
	0xda, 0x9e, 0xba, 0xf9, 0x80, 0x53, 0xc3, 0x59, 0xb1, 0x5c, 0xba, 0x28, 0x7d, 0xda, 0x7f, 0xf2,
	0x4f, 0xf9, 0xb1, 0xef, 0x19, 0x28, 0x33, 0xf6, 0x88, 0x8f, 0x9e, 0x81, 0x59, 0x9d, 0xd9, 0xed,
	0xcf, 0xff, 0x57, 0xfe, 0xf5, 0x3b, 0x0a, 0x48, 0xeb, 0x19, 0x2e, 0xfa, 0x14, 0xcc, 0xc7, 0xa7,
	0xa9, 0xfd, 0xfe, 0xfb, 0x5a, 0xf1, 0x5c, 0xe2, 0x20, 0x11, 0x96, 0xd6, 0x4d, 0x34, 0xd0, 0x65,
	0x98, 0xc1, 0xc3, 0xa1, 0xfd, 0xaf, 0x3f, 0xd6, 0x8a, 0x2b, 0xe9, 0x09, 0xa7, 0x55, 0x24, 0x0b,
	0x7d, 0x12, 0xe6, 0x4c, 0xa6, 0xb4, 0xbf, 0xfd, 0xab, 0x33, 0x4a, 0x61, 0x35, 0x56, 0xd8, 0xd7,
	0x48, 0x5a, 0x29, 0x62, 0xa3, 0x3d, 0xb0, 0xe2, 0x0a, 0x67, 0xa8, 0x32, 0x01, 0xb1, 0xff, 0xe6,
	0x3f, 0xb5, 0x85, 0x0b, 0x63, 0x5e, 0xa9, 0x73, 0x45, 0x66, 0xaf, 0x6a, 0x38, 0x8b, 0xa1, 0x1b,
	0x50, 0xc9, 0x9c, 0x0a, 0xf6, 0xeb, 0xef, 0x14, 0x95, 0xb9, 0x8f, 0xa4, 0x06, 0x24, 0xf1, 0x96,
	0x82, 0xd3, 0xb6, 0xca, 0x3c, 0x05, 0xa0, 0x7d, 0x58, 0x1c, 0x2b, 0x58, 0xec, 0x3f, 0xf8, 0x37,
	0x6d, 0xac, 0x3e, 0x61, 0x1d, 0x35, 0x25, 0x6d, 0xd0, 0x22, 0x39, 0x10, 0x35, 0x60, 0x21, 0x55,
	0x20, 0xda, 0x3f, 0xfc, 0xe3, 0xd9, 0x5c, 0x18, 0xc8, 0xd5, 0x1d, 0x37, 0x04, 0x38, 0x16, 0xa3,
	0x2e, 0xd8, 0xa7, 0x95, 0x2a, 0xf6, 0xbf, 0x7c, 0x65, 0x5e, 0xd9, 0xbb, 0x14, 0xdb, 0xbb, 0xa9,
	0xa9, 0x9b, 0x8a, 0xb9, 0x19, 0x11, 0xd3, 0xb6, 0xcf, 0x1c, 0x4e, 0xa4, 0xa0, 0xcf, 0xc0, 0xd2,
	0x84, 0x33, 0xc8, 0xfe, 0xf2, 0xd7, 0xf5, 0x2b, 0x1e, 0x4e, 0x96, 0x53, 0xb1, 0xd2, 0xde, 0x1e,
	0x9b, 0x37, 0xd1, 0x80, 0xf8, 0x18, 0x05, 0x09, 0x78, 0xf0, 0x7e, 0x07, 0xa2, 0xfd, 0xe6, 0xdb,
	0x55, 0xf5, 0x9e, 0xcb, 0xf7, 0x79, 0x4f, 0x63, 0x38, 0x6c, 0x07, 0xdd, 0x30, 0xff, 0xba, 0x55,
	0x7e, 0x1a, 0x53, 0xae, 0x7f, 0xaa, 0xda, 0xb5, 0x7f, 0xef, 0x4f, 0xe7, 0x73, 0xeb, 0xbf, 0xa9,
	0xd0, 0x8c, 0x55, 0xb9, 0xfe, 0x7e, 0x2c, 0x46, 0x37, 0x60, 0x21, 0x55, 0xe5, 0xda, 0xdf, 0x7f,
	0x4f, 0x9b, 0x38, 0x9f, 0xf2, 0x88, 0x18, 0xcd, 0x8f, 0x2c, 0xad, 0x89, 0x5e, 0x81, 0xa5, 0x09,
	0x25, 0x90, 0xfd, 0x83, 0x9f, 0xe4, 0x17, 0x78, 0xcf, 0xb0, 0x26, 0xa7, 0x48, 0x34, 0x1c, 0x83,
	0x65, 0xb2, 0x4d, 0xea, 0x76, 0xfb, 0xeb, 0xef, 0x40, 0x7e, 0x96, 0x31, 0x98, 0x9d, 0x65, 0x2c,
	0x96, 0x81, 0x99, 0xaf, 0xa8, 0xed, 0xdf, 0xff, 0xf5, 0x85, 0x5c, 0x60, 0x5e, 0xd7, 0x94, 0x8e,
	0x61, 0x64, 0x02, 0xb3, 0x9b, 0xc5, 0x64, 0x60, 0x66, 0x4a, 0x78, 0xfb, 0x0b, 0xbf, 0xb9, 0x90,
	0x0b, 0x4c, 0x63, 0xae, 0x2d, 0xe1, 0x4c, 0x60, 0x76, 0x53, 0x00, 0xfa, 0x79, 0x58, 0x9e, 0x54,
	0x81, 0xdb, 0x6f, 0xbc, 0xbd, 0x90, 0x5b, 0xb8, 0x6d, 0x4d, 0xbb, 0xc3, 0x09, 0x9b, 0x10, 0x54,
	0x68, 0x30, 0x06, 0xa3, 0x9b, 0x50, 0x4e, 0xdb, 0xb6, 0x7f, 0xe7, 0xdf, 0x17, 0x72, 0xbb, 0x9b,
	0xb6, 0x99, 0xdf, 0xdd, 0x94, 0x41, 0xf4, 0x2a, 0x9c, 0xbb, 0x4f, 0x07, 0x60, 0xbf, 0xf5, 0x56,
	0x59, 0x19, 0x7e, 0x6c, 0xa2, 0x61, 0xc5, 0xcd, 0x0f, 0xd9, 0xbc, 0xc5, 0x1e, 0x9c, 0x42, 0x44,
	0x9f, 0x85, 0x33, 0x93, 0x3b, 0x05, 0xfb, 0x37, 0xfe, 0x0e, 0xa9, 0xb7, 0x3d, 0x3a, 0xe9, 0x6d,
	0x77, 0x23, 0x5a, 0x7a, 0x71, 0x96, 0x07, 0x13, 0x08, 0xe8, 0x67, 0xa0, 0x14, 0xf5, 0xc6, 0xf6,
	0xdb, 0x3f, 0xad, 0xe4, 0x12, 0x7d, 0x63, 0x38, 0xbc, 0x9d, 0x33, 0x33, 0x87, 0xb5, 0x0c, 0x6d,
	0x43, 0x9c, 0xa9, 0xdd, 0x63, 0xd9, 0x7c, 0x09, 0xfb, 0xdd, 0xef, 0xeb, 0x41, 0xad, 0x8f, 0xe5,
	0xf9, 0xbb, 0x8a, 0x90, 0xb6, 0x53, 0xc5, 0x19, 0x48, 0x9a, 0xd3, 0x56, 0x5c, 0x59, 0x87, 0xc9,
	0x92, 0xcb, 0xfe, 0xce, 0x57, 0x96, 0x73, 0xe6, 0x34, 0x77, 0xdb, 0x10, 0x32, 0xe6, 0x8e, 0x33,
	0x90, 0x4a, 0xcb, 0x49, 0x17, 0x6e, 0xbf, 0xf5, 0xcf, 0xcb, 0xf9, 0xb4, 0xcc, 0xbc, 0x3d, 0x0d,
	0x66, 0xd3, 0x72, 0x2c, 0x96, 0x47, 0xa0, 0xe9, 0x74, 0xec, 0x1f, 0x7f, 0x71, 0x35, 0xb7, 0x32,
	0x7b, 0x1a, 0xc9, 0xac, 0x8c, 0x61, 0xa3, 0x4d, 0x28, 0xa7, 0x9b, 0x1c, 0xfb, 0xcb, 0x5f, 0x5a,
	0xcd, 0xb9, 0x9c, 0xa3, 0xe1, 0xfc, 0xda, 0x2e, 0xb0, 0x44, 0x8e, 0x5e, 0x00, 0x48, 0xaa, 0x74,
	0xfb, 0x8d, 0x7f, 0x3c, 0x97, 0x3b, 0xee, 0xe5, 0x3e, 0xb6, 0x24, 0x96, 0x39, 0xee, 0x47, 0x91,
	0x54, 0x8e, 0x22, 0xdd, 0x03, 0xd8, 0x3f, 0x7a, 0xff, 0x42, 0x6e, 0x14, 0xd2, 0x42, 0x53, 0xa3,
	0x99, 0x51, 0x8c, 0x12, 0x39, 0xba, 0x0d, 0x56, 0xbe, 0xa7, 0xb2, 0x7f, 0xf2, 0xee, 0xc3, 0xca,
	0xd2, 0x43, 0xa9, 0xf3, 0x37, 0xf0, 0x3b, 0xf8, 0xa0, 0x13, 0xee, 0x93, 0x7e, 0x37, 0x6d, 0xab,
	0xc2, 0xd3, 0x08, 0xda, 0x82, 0x6a, 0xb6, 0x83, 0xb3, 0xdf, 0xf9, 0xee, 0xb8, 0x2d, 0x4d, 0x18,
	0x9b, 0x5b, 0x85, 0xa7, 0x11, 0xf4, 0x2c, 0xcc, 0x99, 0x4e, 0xc5, 0xfe, 0xce, 0x97, 0x3e, 0x96,
	0x2b, 0xa2, 0xee, 0x92, 0x83, 0x5c, 0x55, 0x33, 0x7b, 0xac, 0x44, 0xe8, 0x65, 0x40, 0xe3, 0x7d,
	0x8c, 0xfd, 0xb5, 0x6f, 0x5c, 0x52, 0x16, 0x2e, 0x26, 0x16, 0x68, 0x97, 0x36, 0xd3, 0x9c, 0xb4,
	0xb1, 0xc5, 0xe3, 0x3c, 0x2a, 0x93, 0x61, 0xa6, 0x29, 0xb7, 0xff, 0xec, 0xbd, 0xc7, 0x72, 0xc9,
	0x70, 0x97, 0x4f, 0xce, 0xf7, 0xe5, 0x30, 0x05, 0xc8, 0x98, 0x9f, 0xdc, 0xbe, 0xdb, 0x5f, 0xfb,
	0x9f, 0xc7, 0x72, 0x31, 0x2f, 0x2d, 0xde, 0xef, 0x24, 0x59, 0x0e, 0x27, 0x10, 0x64, 0xa8, 0xe5,
	0x9a, 0x5d, 0xfb, 0xf5, 0x6f, 0x3e, 0x9e, 0x0b, 0xb5, 0x7d, 0xcd, 0xd8, 0xd6, 0x84, 0x4c, 0xa8,
	0xf1, 0x0c, 0x74, 0x6d, 0x09, 0x16, 0xe3, 0x36, 0xd0, 0xbd, 0x87, 0x19, 0xc5, 0x81, 0xd8, 0x2a,
	0x95, 0xfe, 0xfc, 0xcd, 0x8a, 0xf5, 0xad, 0x37, 0x2b, 0x5b, 0xa5, 0xd2, 0x6f, 0x7d, 0xaf, 0x62,
	0xfd, 0xf6, 0xf7, 0xe4, 0xaf, 0xf7, 0xbe, 0x7a, 0xc1, 0xfa, 0xd1, 0x57, 0x2f, 0x38, 0x35, 0xbd,
	0x05, 0x8c, 0xf8, 0x24, 0x10, 0x14, 0xf7, 0x9d, 0x39, 0xcc, 0x04, 0xf5, 0xfa, 0xc4, 0xa9, 0x0e,
	0xc2, 0x51, 0x20, 0x30, 0x0d, 0x74, 0x7a, 0xad, 0xff, 0xd5, 0x1c, 0x80, 0x2c, 0x13, 0x74, 0xab,
	0x84, 0xce, 0xc1, 0x3c, 0xf5, 0x5d, 0x2e, 0xe4, 0xfb, 0x55, 0x87, 0x34, 0xef, 0x94, 0xa8, 0xbf,
	0xaf, 0x9e, 0x65, 0x23, 0x38, 0xc4, 0x4c, 0xf6, 0xb4, 0x09, 0x67, 0x5a, 0x71, 0xaa, 0x5a, 0xde,
	0x8e, 0x98, 0x75, 0xa8, 0x84, 0x7d, 0xdf, 0x8d, 0xd9, 0xaa, 0x5f, 0x9c, 0x77, 0x16, 0xc2, 0xbe,
	0xbf, 0x67, 0x98, 0xc8, 0x86, 0xb9, 0x7b, 0x84, 0xa9, 0x0a, 0x58, 0x37, 0x88, 0xd1, 0x23, 0x5a,
	0x86, 0xe2, 0x20, 0xd5, 0x09, 0xea, 0x07, 0x29, 0xf5, 0x52, 0x1d, 0x9f, 0x7e, 0x40, 0x08, 0x0a,
	0x01, 0x1e, 0x10, 0x7b, 0x4e, 0xbd, 0x40, 0xfd, 0x46, 0x8f, 0x42, 0x2d, 0x08, 0x03, 0xd7, 0x34,
	0xee, 0x0a, 0x2e, 0x29, 0xb8, 0x12, 0x84, 0xc1, 0x1d, 0x25, 0xdd, 0x91, 0xbc, 0xe7, 0x60, 0x95,
	0x13, 0x76, 0x8f, 0x30, 0xd7, 0x27, 0x5d, 0x1a, 0xc8, 0x43, 0x40, 0xab, 0x08, 0xdc, 0xb3, 0x41,
	0x69, 0x9c, 0xd1, 0x84, 0x4d, 0x8d, 0x6b, 0xdd, 0x0e, 0xee, 0xa1, 0xa7, 0x00, 0x45, 0x17, 0x02,
	0x2e, 0x0d, 0xcc, 0x44, 0xed, 0x9a, 0x1c, 0x99, 0x3c, 0x74, 0x1c, 0x2b, 0x42, 0xdb, 0x81, 0x9e,
	0x30, 0xfa, 0x38, 0x2c, 0xd3, 0x80, 0x13, 0x26, 0x5c, 0xdc, 0x15, 0x84, 0xb9, 0x54, 0x90, 0x81,
	0x5c, 0x19, 0x4b, 0xbe, 0x47, 0xe9, 0x2c, 0x6a, 0xbc, 0x21, 0xe1, 0xb6, 0x20, 0x83, 0xb6, 0x8f,
	0x1e, 0x82, 0x39, 0x5d, 0xb1, 0xfa, 0xb6, 0xcc, 0xfc, 0xa5, 0xab, 0xc5, 0x2e, 0xee, 0x73, 0xe2,
	0x44, 0x52, 0x74, 0x05, 0x56, 0x42, 0x46, 0x7b, 0x34, 0xc0, 0x22, 0x64, 0xae, 0x87, 0xbd, 0x43,
	0xe2, 0xf6, 0x46, 0xd4, 0xb7, 0x97, 0xd4, 0xf0, 0x97, 0x12, 0xb0, 0x29, 0xb1, 0x1b, 0x23, 0xea,
	0xcb, 0x69, 0xa7, 0x75, 0xf4, 0x1d, 0x67, 0x34, 0x9c, 0x65, 0x3d, 0xed, 0x94, 0x9e, 0xc2, 0xcd,
	0x78, 0x3e, 0x01, 0xf3, 0xb1, 0x2b, 0xda, 0x2b, 0xb9, 0x9c, 0x90, 0xeb, 0xb6, 0x9d, 0x84, 0x8a,
	0xce, 0xc3, 0x6c, 0x37, 0xec, 0xfb, 0x84, 0xd9, 0x67, 0xd2, 0xd3, 0x30, 0x42, 0x39, 0xa2, 0xf8,
	0xaa, 0x75, 0x6c, 0x23, 0xce, 0xea, 0x11, 0x69, 0xc2, 0xd8, 0x46, 0x6c, 0xc0, 0x62, 0xc8, 0x7c,
	0x1a, 0xe0, 0x7e, 0x6a, 0x1f, 0xec, 0xf5, 0xa9, 0x4b, 0x65, 0xb5, 0xa6, 0x35, 0x03, 0xc6, 0xdb,
	0xf0, 0x22, 0xd4, 0x72, 0x17, 0x3a, 0xf6, 0x6a, 0xae, 0xbb, 0xd5, 0xc6, 0xf7, 0x0c, 0xec, 0x54,
	0x47, 0x99, 0xe7, 0xad, 0x42, 0x69, 0xde, 0x82, 0xad, 0x42, 0x69, 0xc1, 0x2a, 0x6f, 0x15, 0x4a,
	0x65, 0xab, 0xb2, 0x55, 0x28, 0x55, 0xac, 0xea, 0x56, 0xa1, 0x54, 0xb5, 0x6a, 0x5b, 0x85, 0xd2,
	0xa2, 0x85, 0xb6, 0x0a, 0xa5, 0x35, 0xeb, 0x9c, 0x53, 0x55, 0x16, 0xa5, 0x9b, 0x72, 0x81, 0x07,
	0x43, 0xa7, 0x1c, 0xf5, 0xfb, 0xea, 0x86, 0xa1, 0x16, 0x5f, 0x47, 0xeb, 0x55, 0x70, 0xca, 0xb1,
	0x60, 0xc4, 0xfa, 0x8e, 0x95, 0xc0, 0xba, 0x94, 0x73, 0x96, 0x54, 0x6f, 0xe4, 0x13, 0xdf, 0xc5,
	0x42, 0x30, 0x7a, 0x30, 0x12, 0x84, 0x3b, 0x15, 0x2c, 0x04, 0xf6, 0x0e, 0x07, 0x3a, 0xce, 0xea,
	0xbf, 0x36, 0x05, 0x6b, 0xcd, 0x43, 0x16, 0x0e, 0xe8, 0x68, 0x10, 0xf7, 0x59, 0xbc, 0x21, 0xfb,
	0x13, 0x19, 0xde, 0x17, 0xa0, 0x9c, 0x74, 0x68, 0xd4, 0x37, 0x11, 0xbe, 0x10, 0xcb, 0xda, 0x3e,
	0xba, 0x09, 0x17, 0xe2, 0x37, 0xab, 0xdb, 0x21, 0xee, 0x72, 0x1a, 0x78, 0xc4, 0xed, 0x63, 0xae,
	0x6f, 0xc8, 0xa9, 0x50, 0x51, 0x5f, 0x71, 0xce, 0x47, 0x44, 0x75, 0x57, 0xc4, 0xf7, 0x25, 0xed,
	0x36, 0xe6, 0xa2, 0xa9, 0x48, 0xf5, 0xd7, 0xa7, 0x00, 0x69, 0xef, 0xd1, 0x99, 0x7c, 0x0f, 0x33,
	0x3c, 0xe0, 0x32, 0x8b, 0x90, 0x00, 0x1f, 0xf4, 0x89, 0xef, 0x8a, 0x93, 0x21, 0x71, 0xa9, 0xcf,
	0xed, 0xa9, 0xf5, 0x99, 0x4b, 0x45, 0xa7, 0x6a, 0xe4, 0x9d, 0x93, 0x21, 0x69, 0xfb, 0x5c, 0x3a,
	0xb7, 0xc0, 0x07, 0x5c, 0xdd, 0x0f, 0x29, 0xaa, 0xc1, 0xd5, 0xeb, 0x4b, 0xce, 0x92, 0x04, 0x37,
	0x0d, 0xd6, 0xd2, 0x10, 0xda, 0x80, 0x25, 0x2f, 0x0c, 0x8f, 0x28, 0x71, 0x7f, 0x11, 0x33, 0x77,
	0x40, 0xf9, 0x00, 0x0b, 0xef, 0x50, 0xe5, 0x9f, 0x92, 0xb3, 0xa8, 0xa1, 0x2d, 0xcc, 0xb6, 0x0d,
	0x50, 0xff, 0xee, 0x34, 0x54, 0xf4, 0x78, 0x4d, 0xba, 0x45, 0x4f, 0xc0, 0x1c, 0x09, 0x04, 0xa3,
	0x44, 0x0f, 0x6b, 0xe1, 0xca, 0x52, 0xa6, 0x9f, 0xd2, 0x5e, 0xee, 0x44, 0x1c, 0x74, 0x1e, 0x20,
	0x15, 0x76, 0x3a, 0x1d, 0xce, 0x7b, 0x71, 0xb0, 0x75, 0x60, 0x29, 0x5e, 0x5d, 0xee, 0x62, 0xb3,
	0x11, 0xf6, 0x8c, 0xb2, 0x9c, 0x9c, 0x86, 0xa7, 0xef, 0x99, 0x83, 0xc8, 0xf8, 0x3e, 0xbe, 0x08,
	0x15, 0x7d, 0xbe, 0x4a, 0x8f, 0xc7, 0x03, 0xae, 0x32, 0x68, 0xba, 0x78, 0x19, 0x5f, 0x77, 0xa7,
	0xec, 0xa5, 0x77, 0xa1, 0x01, 0xb5, 0xf8, 0xa3, 0x47, 0x20, 0xc8, 0x6b, 0x82, 0xdb, 0x45, 0x35,
	0xa6, 0x24, 0x9e, 0xe5, 0xd2, 0xca, 0xad, 0x68, 0x6a, 0x82, 0x53, 0xf5, 0x22, 0xa3, 0x8a, 0x2f,
	0x13, 0xf8, 0x10, 0xfb, 0xb2, 0x9e, 0x52, 0x29, 0x79, 0xde, 0x89, 0x1e, 0xeb, 0xff, 0x30, 0x03,
	0x8b, 0x37, 0x88, 0xb8, 0xa3, 0x3e, 0x1d, 0x74, 0x18, 0xed, 0xf5, 0x08, 0xe3, 0xe8, 0x32, 0x2c,
	0x66, 0x1a, 0xd7, 0x43, 0x1a, 0x08, 0xb5, 0xc4, 0xf3, 0x8e, 0x95, 0x06, 0x6e, 0xd2, 0x40, 0xa0,
	0xa7, 0x60, 0x39, 0x4a, 0x09, 0x2c, 0x1c, 0x0e, 0x89, 0xaf, 0xe8, 0xdc, 0x6c, 0x3d, 0x32, 0xd9,
	0x40, 0x43, 0x52, 0x81, 0xcb, 0x24, 0x42, 0x83, 0x7b, 0xb8, 0x4f, 0x7d, 0x65, 0x85, 0xbb, 0xe1,
	0x48, 0xb8, 0x61, 0xd7, 0x95, 0xd3, 0x31, 0xfb, 0x7f, 0x26, 0x43, 0xd8, 0x1d, 0x89, 0xdd, 0xae,
	0xdc, 0x52, 0x74, 0x15, 0x56, 0xfb, 0xa1, 0x87, 0xfb, 0xee, 0x20, 0xf4, 0x93, 0xf1, 0x05, 0x23,
	0xbf, 0x47, 0xb8, 0x39, 0x9c, 0xce, 0x2a, 0xc2, 0x76, 0x0a, 0xdf, 0x51, 0x30, 0xfa, 0x04, 0x9c,
	0x8d, 0xfd, 0x93, 0x91, 0x2e, 0x23, 0xfc, 0x30, 0xd2, 0xd4, 0xc7, 0xd7, 0x4a, 0x04, 0x3b, 0x1a,
	0x35, 0x7a, 0x4f, 0xc1, 0x72, 0x74, 0xf8, 0x64, 0x26, 0x38, 0xab, 0x27, 0x68, 0xce, 0x9d, 0xf4,
	0x04, 0x3f, 0x09, 0x36, 0x0d, 0xa8, 0x3c, 0xce, 0xd5, 0x9c, 0x54, 0xbe, 0x63, 0x61, 0x8f, 0x11,
	0xce, 0xd5, 0xf1, 0x57, 0x72, 0x56, 0x0c, 0x2e, 0x27, 0xd5, 0x0e, 0xf6, 0x0c, 0x88, 0x76, 0xe1,
	0x11, 0xa5, 0xd0, 0x0d, 0x99, 0xcb, 0x08, 0x0f, 0xfb, 0xf7, 0x88, 0x2a, 0xcf, 0xfa, 0xd4, 0x13,
	0x19, 0x2b, 0x25, 0x65, 0x65, 0x5d, 0x92, 0xaf, 0x87, 0xcc, 0xd1, 0xd4, 0xa6, 0x61, 0x26, 0x06,
	0xeb, 0xdf, 0x9a, 0x86, 0xb5, 0x1b, 0x98, 0x1d, 0xe0, 0x1e, 0x69, 0x86, 0xfd, 0x3e, 0x51, 0x3d,
	0x70, 0x72, 0x0f, 0xd2, 0x82, 0x82, 0x9c, 0xaf, 0xca, 0x2e, 0xd5, 0xd4, 0xcd, 0xca, 0xe9, 0x2a,
	0xea, 0x2a, 0xf2, 0xea, 0xdc, 0x9d, 0x9d, 0x5b, 0x3b, 0xbb, 0x77, 0x77, 0x1c, 0xa5, 0x2e, 0xfd,
	0xc5, 0x54, 0x04, 0xee, 0x31, 0x16, 0x84, 0xa9, 0x4b, 0x54, 0x7d, 0x4b, 0x6d, 0x19, 0xe0, 0x6e,
	0x24, 0x47, 0x4f, 0xc3, 0x0a, 0xee, 0x91, 0x84, 0x28, 0xe7, 0xe5, 0xe3, 0x13, 0xae, 0x76, 0xbe,
	0xe8, 0x20, 0xdc, 0x23, 0x31, 0xb9, 0x1d, 0x6c, 0xe2, 0x13, 0x5e, 0xff, 0x2c, 0x14, 0xe4, 0x6b,
	0xd1, 0x02, 0x44, 0x2f, 0xb6, 0x1e, 0x40, 0x2b, 0xb0, 0xf8, 0x72, 0xcb, 0xd9, 0x6f, 0xef, 0xee,
	0xb8, 0x77, 0x1b, 0x9d, 0x96, 0xb3, 0xdd, 0x70, 0x6e, 0x59, 0x53, 0x68, 0x11, 0x2a, 0x8d, 0x1b,
	0xad, 0x94, 0x68, 0x1a, 0x5d, 0x80, 0xd5, 0xcd, 0xd6, 0x9e, 0xd3, 0x6a, 0x36, 0x3a, 0xad, 0x4d,
	0x77, 0xbb, 0xf1, 0x69, 0xb7, 0xdd, 0x69, 0x6d, 0xbb, 0xcd, 0xdd, 0x3b, 0x3b, 0x1d, 0x6b, 0x66,
	0x6d, 0xba, 0x34, 0xb5, 0x55, 0x28, 0x15, 0xac, 0xa2, 0xb3, 0x34, 0xc0, 0xaf, 0xb9, 0xc1, 0x68,
	0x70, 0x40, 0x98, 0xf4, 0x47, 0x79, 0xd2, 0xf2, 0xfa, 0xdf, 0x4f, 0xc3, 0x99, 0x28, 0xc0, 0xa2,
	0x75, 0xdd, 0xc6, 0xec, 0x88, 0x30, 0xb4, 0x0e, 0x65, 0x75, 0x23, 0x6e, 0xb2, 0xa3, 0x5a, 0xc6,
	0xa2, 0x03, 0xbe, 0x61, 0xb7, 0x7d, 0x59, 0x0a, 0x89, 0xf0, 0x88, 0x04, 0x6a, 0x35, 0xca, 0x8e,
	0x7e, 0x40, 0x2d, 0x38, 0x1f, 0x9f, 0x35, 0xae, 0x12, 0xa9, 0x1d, 0x1f, 0xd0, 0x9e, 0x29, 0xc2,
	0x67, 0xe2, 0xf2, 0x64, 0x2d, 0x26, 0x76, 0x24, 0xef, 0x7a, 0xc8, 0xb6, 0x23, 0x16, 0x7a, 0x72,
	0x52, 0x98, 0x16, 0xe2, 0x2a, 0x65, 0x3c, 0x54, 0xb7, 0x60, 0x29, 0xf9, 0x50, 0xe8, 0x0a, 0x13,
	0xee, 0x76, 0x31, 0x77, 0x63, 0x3b, 0x96, 0x10, 0x9c, 0xc5, 0xde, 0x58, 0x8e, 0xb8, 0x0e, 0xe5,
	0x9e, 0x97, 0xba, 0x9e, 0x9b, 0xcd, 0x75, 0x0d, 0xa7, 0xbb, 0x90, 0xb3, 0xd0, 0xf3, 0xe2, 0x87,
	0xfa, 0x2f, 0x17, 0x53, 0x19, 0x88, 0x47, 0xa9, 0xfd, 0x05, 0x58, 0x48, 0x7d, 0xc6, 0xb4, 0xa7,
	0x73, 0xfd, 0x5a, 0xa2, 0xd0, 0x54, 0xac, 0x76, 0xd0, 0x0d, 0x1d, 0xf0, 0xe2, 0xdf, 0xe8, 0x63,
	0x50, 0xe9, 0x12, 0xe1, 0x1d, 0x9a, 0x13, 0x5b, 0x3b, 0x57, 0xe9, 0x6a, 0x41, 0xb0, 0x11, 0x71,
	0xca, 0x0a, 0xba, 0xae, 0x11, 0x79, 0x2c, 0x1c, 0xc8, 0x03, 0xc6, 0xe5, 0xf4, 0x73, 0xba, 0x90,
	0x2d, 0x3a, 0xf3, 0x4a, 0xb2, 0x4f, 0x3f, 0x47, 0xd0, 0x4b, 0xb0, 0xdc, 0x65, 0xe1, 0x20, 0x0e,
	0x3d, 0x77, 0xa0, 0xf6, 0xde, 0x9e, 0x55, 0x39, 0xf8, 0xa1, 0xb1, 0x1c, 0x9c, 0x75, 0x11, 0x07,
	0x49, 0xe5, 0x9c, 0xdb, 0x5c, 0x84, 0x79, 0x2e, 0x18, 0xc1, 0x03, 0x99, 0x90, 0xe7, 0xd2, 0x65,
	0x56, 0x22, 0x47, 0xcf, 0xc2, 0x52, 0x40, 0x88, 0xef, 0x26, 0xdf, 0xa1, 0xdd, 0x23, 0x72, 0xa2,
	0x03, 0x3f, 0xa2, 0x2f, 0x4a, 0x46, 0x2b, 0x26, 0xdc, 0x22, 0x27, 0x68, 0x17, 0x3e, 0xe2, 0x31,
	0x22, 0xb7, 0x77, 0x10, 0x1e, 0xd0, 0x3e, 0x71, 0xa3, 0x93, 0x9f, 0x9b, 0xa5, 0xb0, 0x7f, 0x98,
	0x7e, 0xa3, 0x72, 0x94, 0x73, 0x5a, 0x63, 0x5b, 0x29, 0x44, 0x95, 0x0f, 0xd7, 0xeb, 0x83, 0x5e,
	0x02, 0x94, 0xfe, 0xb8, 0xac, 0xcb, 0x4d, 0x7b, 0x5e, 0x25, 0x8c, 0x8b, 0xb9, 0xf3, 0x76, 0x34,
	0xe0, 0xa9, 0xad, 0xd9, 0x55, 0x54, 0xc7, 0xea, 0xe5, 0x24, 0x68, 0x1d, 0x4a, 0x94, 0xbb, 0x8c,
	0x08, 0x76, 0xa2, 0x8a, 0xf7, 0xa4, 0x58, 0xa6, 0xdc, 0x91, 0xd2, 0x49, 0x67, 0xde, 0xc2, 0x87,
	0x3b, 0xf3, 0xb6, 0x0a, 0xa5, 0x29, 0x6b, 0xda, 0xc4, 0x75, 0x55, 0xed, 0x60, 0x52, 0xde, 0xd5,
	0xcc, 0x77, 0x29, 0x53, 0xd8, 0xf0, 0xba, 0x0d, 0x67, 0x9a, 0x7d, 0x82, 0xd9, 0xbe, 0xce, 0xe5,
	0x58, 0x60, 0xe3, 0x88, 0xf5, 0x55, 0x38, 0x9b, 0x43, 0x1c, 0xc2, 0x87, 0x61, 0xc0, 0x49, 0xfd,
	0x71, 0x98, 0x6b, 0x1e, 0xd2, 0xe1, 0x35, 0xdc, 0x93, 0xd5, 0x9a, 0x39, 0x22, 0xbc, 0x43, 0x3a,
	0xe4, 0x2a, 0x11, 0x94, 0x9d, 0x05, 0x2d, 0x93, 0x24, 0x5e, 0xff, 0x95, 0x29, 0x28, 0xeb, 0xb3,
	0x7e, 0x5f, 0x60, 0x31, 0xe2, 0xe8, 0x05, 0x38, 0x77, 0x48, 0x09, 0xc3, 0xcc, 0x3b, 0x3c, 0x49,
	0x92, 0xbc, 0x4f, 0x04, 0xf1, 0xa2, 0x8f, 0x5e, 0x25, 0x67, 0x35, 0xa6, 0x44, 0xc9, 0x7d, 0xd3,
	0x10, 0xd0, 0xb3, 0x70, 0x96, 0x72, 0x7d, 0xbe, 0x74, 0x09, 0x16, 0x23, 0x96, 0xaf, 0xba, 0x96,
	0x29, 0x97, 0xdb, 0x72, 0x5d, 0x83, 0xa6, 0xec, 0xaa, 0xf7, 0xa0, 0x96, 0x5b, 0xba, 0x0f, 0x90,
	0xc6, 0x6c, 0x98, 0x33, 0x1b, 0x61, 0x12, 0x59, 0xf4, 0x98, 0xee, 0x0d, 0x67, 0x32, 0xbd, 0x61,
	0xfd, 0x1b, 0xb3, 0xb0, 0xa2, 0x27, 0xdc, 0x09, 0xf5, 0xea, 0x45, 0xc1, 0xbd, 0x0c, 0x45, 0xd5,
	0xd2, 0xda, 0x53, 0xeb, 0xd3, 0x97, 0xe6, 0x1d, 0xfd, 0x80, 0x9e, 0x00, 0x4b, 0x7d, 0x39, 0xf5,
	0xc2, 0xbe, 0x1b, 0x99, 0x94, 0x2f, 0x2b, 0x5e, 0x9d, 0x7e, 0xf6, 0x8a, 0x53, 0x8b, 0xb0, 0x97,
	0x4d, 0xeb, 0xe9, 0x80, 0x15, 0x7d, 0x9f, 0x56, 0x63, 0x91, 0x27, 0xf2, 0xcc, 0xfa, 0xf4, 0xa5,
	0xea, 0x95, 0x8f, 0xe6, 0x6a, 0xab, 0xdc, 0xeb, 0x37, 0x9a, 0x86, 0xee, 0xd4, 0x8c, 0x81, 0x48,
	0x80, 0x36, 0x60, 0xd6, 0x94, 0xcd, 0x85, 0xdc, 0x27, 0xc7, 0x4c, 0xe1, 0xe9, 0x18, 0x16, 0x7a,
	0x1e, 0x16, 0x52, 0xb1, 0x71, 0x7a, 0x1e, 0x8d, 0xd2, 0x9a, 0x03, 0x49, 0x2c, 0xa0, 0x47, 0xa0,
	0xca, 0x45, 0xc8, 0x88, 0x7b, 0x40, 0x99, 0x38, 0xf4, 0xf1, 0x89, 0xe9, 0x8c, 0x2b, 0x4a, 0x7a,
	0xcd, 0x08, 0xd1, 0x73, 0xb0, 0xa2, 0xed, 0xb1, 0xf0, 0xa0, 0x4f, 0x06, 0x89, 0x83, 0x64, 0x32,
	0x81, 0xfa, 0x9c, 0xb1, 0xa7, 0x29, 0xb1, 0x87, 0x3c, 0x0d, 0x90, 0xfc, 0x21, 0xc6, 0xd6, 0xf7,
	0xe4, 0x28, 0xf5, 0x35, 0xe0, 0x60, 0xd4, 0x53, 0x89, 0x73, 0xde, 0x8f, 0x7e, 0xa2, 0x2b, 0x50,
	0x3e, 0xc0, 0x3d, 0x79, 0xf8, 0x69, 0x47, 0xd6, 0x37, 0xc4, 0x56, 0xaa, 0xfa, 0x55, 0x0e, 0xef,
	0xc0, 0x01, 0xee, 0xed, 0x76, 0x95, 0x67, 0xa3, 0xb3, 0x30, 0x87, 0x87, 0x54, 0x65, 0xa7, 0xb2,
	0x9a, 0xc1, 0x2c, 0x1e, 0x52, 0x99, 0x8b, 0xae, 0x42, 0xc5, 0x44, 0x31, 0x57, 0x2e, 0x6f, 0x57,
	0x72, 0x9f, 0xdb, 0xd2, 0xf1, 0xe0, 0x94, 0xbd, 0x74, 0x74, 0x5c, 0x81, 0x95, 0xb8, 0x04, 0x4c,
	0xf5, 0xbe, 0xbe, 0x5d, 0xd5, 0xed, 0x72, 0x0a, 0x34, 0x7d, 0xaf, 0x8f, 0x6e, 0xc1, 0xa2, 0x27,
	0x63, 0xd5, 0x8d, 0xca, 0x35, 0x2c, 0xb0, 0xea, 0xf4, 0xd3, 0x79, 0x7a, 0x72, 0x9c, 0x3b, 0x35,
	0x2f, 0x2b, 0xaf, 0x1f, 0x40, 0x29, 0xf6, 0x0b, 0x80, 0xd9, 0xe6, 0xee, 0xf6, 0x76, 0xbb, 0x63,
	0x4d, 0xa1, 0x1a, 0x2c, 0xdc, 0x68, 0x75, 0xdc, 0x3b, 0x7b, 0x9b, 0x8d, 0x4e, 0x6b, 0xdf, 0x9a,
	0x46, 0x16, 0x94, 0x53, 0xd5, 0xc5, 0xc7, 0xad, 0x99, 0x9c, 0xe4, 0x19, 0xab, 0x20, 0x6b, 0x95,
	0xe6, 0xed, 0x56, 0xc3, 0x71, 0xf7, 0x5b, 0xce, 0xcb, 0x2d, 0xc7, 0xdd, 0x6c, 0x74, 0x1a, 0x56,
	0x71, 0xab, 0x50, 0x9a, 0xb5, 0xe6, 0x74, 0x9b, 0xea, 0x94, 0xf1, 0x48, 0x1c, 0x92, 0x40, 0xc8,
	0xf3, 0x9a, 0xd4, 0x7f, 0x01, 0x96, 0x6e, 0x10, 0xd1, 0x64, 0x98, 0x1f, 0xaa, 0x2d, 0xd2, 0xf9,
	0x0a, 0xad, 0x42, 0xc9, 0x93, 0xb2, 0xa4, 0x23, 0x9c, 0x53, 0xcf, 0x6d, 0x1f, 0x3d, 0x06, 0x8b,
	0x1a, 0x92, 0x69, 0xce, 0x1d, 0xd0, 0x7e, 0x9f, 0x72, 0x53, 0x83, 0xd5, 0x14, 0xd0, 0xa1, 0x03,
	0xb2, 0xad, 0xc4, 0xf5, 0xcf, 0xc0, 0x72, 0xd6, 0xba, 0xce, 0x68, 0xd2, 0x3c, 0x17, 0xd8, 0x3b,
	0x4a, 0x99, 0x57, 0xcf, 0x1f, 0xd2, 0xfc, 0xef, 0xce, 0x42, 0x55, 0x07, 0x4c, 0x6c, 0xf9, 0x16,
	0x54, 0x64, 0x1b, 0x76, 0xc2, 0x8c, 0x40, 0x75, 0x13, 0x70, 0xe5, 0x91, 0x5c, 0x80, 0x45, 0xfc,
	0x8d, 0x96, 0x24, 0x47, 0x4f, 0x4e, 0x56, 0x77, 0xed, 0xdb, 0x05, 0xa8, 0x64, 0x08, 0xa8, 0x0d,
	0x95, 0x08, 0x55, 0x59, 0xcc, 0x9e, 0x56, 0x99, 0xe0, 0xe1, 0xd3, 0xcc, 0x47, 0x3f, 0x64, 0x7a,
	0x73, 0xca, 0x2c, 0xf5, 0x94, 0xbd, 0x57, 0x9b, 0xf9, 0x00, 0xf7, 0x6a, 0x85, 0x89, 0xf7, 0x6a,
	0xa9, 0xbc, 0x38, 0x9b, 0xbd, 0x33, 0xfb, 0xff, 0xdc, 0x83, 0x5d, 0x84, 0x0a, 0x61, 0x4c, 0x96,
	0x8a, 0xe6, 0xb6, 0x72, 0x5e, 0xb1, 0xca, 0x4a, 0x98, 0x4a, 0xaf, 0xfa, 0x52, 0x0e, 0xd2, 0x97,
	0x72, 0x3c, 0xd5, 0xfd, 0x44, 0xd7, 0x3d, 0xae, 0xd2, 0x33, 0x41, 0xfe, 0xfc, 0x07, 0xda, 0x8b,
	0x8d, 0xa8, 0x8d, 0x8f, 0x6e, 0x8f, 0x5a, 0xd2, 0x44, 0xd2, 0x3a, 0x65, 0xc4, 0x6b, 0x5f, 0x98,
	0x82, 0x95, 0x89, 0x0a, 0xe8, 0xd3, 0xb0, 0x92, 0xff, 0x9b, 0x91, 0x1e, 0xcc, 0x54, 0xee, 0x1b,
	0x74, 0xf6, 0xf6, 0x55, 0x0f, 0x4d, 0x99, 0xb8, 0xf9, 0x80, 0xb3, 0x94, 0xbd, 0x7f, 0x55, 0xe2,
	0x6b, 0x16, 0x54, 0x93, 0x6b, 0x08, 0x29, 0xd9, 0x2a, 0x94, 0x8a, 0xd6, 0xac, 0x33, 0xe1, 0x1a,
	0xb0, 0x1e, 0x40, 0x39, 0xed, 0x0a, 0xb2, 0xc1, 0xd8, 0xbf, 0xd3, 0x6c, 0xb6, 0xf6, 0xf7, 0xad,
	0x29, 0x54, 0x86, 0x52, 0x73, 0x77, 0xe7, 0xfa, 0xed, 0x76, 0xb3, 0x63, 0x4d, 0xa3, 0x79, 0x28,
	0x3a, 0xad, 0x8e, 0xf3, 0x8a, 0x35, 0x83, 0x96, 0xa0, 0xd6, 0xde, 0x79, 0xb9, 0x71, 0xbb, 0xbd,
	0xe9, 0x6e, 0xb7, 0xf6, 0xf7, 0x1b, 0x37, 0x5a, 0x56, 0x01, 0x55, 0x01, 0x76, 0x65, 0x68, 0xbf,
	0x74, 0x67, 0x57, 0xc6, 0xb6, 0x24, 0x75, 0x9c, 0xc6, 0xce, 0x7e, 0xbb, 0xb5, 0xd3, 0x71, 0x5b,
	0x8e, 0xb3, 0xeb, 0x58, 0xb3, 0xf5, 0x77, 0xa7, 0x01, 0x25, 0xa7, 0x42, 0xec, 0xbe, 0x1f, 0xf2,
	0x22, 0xe3, 0x32, 0x2c, 0x7a, 0x87, 0x38, 0xe8, 0x11, 0x59, 0x44, 0x0d, 0x30, 0x0d, 0x22, 0x37,
	0x9c, 0x71, 0x2c, 0x03, 0x38, 0x91, 0x1c, 0xed, 0xca, 0x3a, 0xf2, 0x78, 0xac, 0x7c, 0x2d, 0x7e,
	0xb0, 0xf2, 0x75, 0x31, 0x20, 0xc7, 0xb9, 0xea, 0xf5, 0xa3, 0x50, 0xcb, 0xd6, 0xa4, 0x5c, 0xd5,
	0xc2, 0x65, 0xa7, 0x4a, 0xd2, 0x95, 0x28, 0x47, 0x2d, 0x58, 0x34, 0x55, 0x82, 0x3b, 0x18, 0x09,
	0xdd, 0xc9, 0xdb, 0x73, 0xff, 0x47, 0x19, 0x67, 0x19, 0x95, 0xed, 0x48, 0x63, 0xab, 0x50, 0x9a,
	0xb6, 0x66, 0xb6, 0x0a, 0xa5, 0x19, 0xab, 0xe0, 0x54, 0xe4, 0x54, 0x92, 0x3a, 0xce, 0x0a, 0xc8,
	0x71, 0xf4, 0xf7, 0x22, 0x25, 0xa9, 0xff, 0xed, 0x9c, 0xac, 0xe4, 0xd2, 0xa7, 0x7e, 0xbc, 0xc8,
	0x4f, 0xc6, 0x87, 0xfb, 0x54, 0xee, 0x1a, 0x31, 0xeb, 0xef, 0xf1, 0xe9, 0xfe, 0xb3, 0xd9, 0xd3,
	0x3d, 0xff, 0x27, 0x93, 0xf1, 0x7d, 0xcc, 0x1c, 0xef, 0x9b, 0x00, 0x3a, 0x54, 0xbd, 0xd0, 0xd7,
	0x7f, 0xac, 0xaa, 0xa6, 0xbe, 0xb9, 0x25, 0xf5, 0xb2, 0x72, 0xda, 0x6c, 0x53, 0x3d, 0xaf, 0x14,
	0x9b, 0xa1, 0x3f, 0x21, 0xe0, 0x8b, 0x13, 0x02, 0x7e, 0xbc, 0x92, 0x98, 0x9d, 0x54, 0x49, 0x7c,
	0x0a, 0xaa, 0xd9, 0x7f, 0xcf, 0xaa, 0x14, 0x94, 0xa9, 0x72, 0x4c, 0x09, 0xad, 0x50, 0xa7, 0xe2,
	0xa5, 0x1f, 0xa5, 0xfa, 0x30, 0xfa, 0x3f, 0x9b, 0x3e, 0x5a, 0x4b, 0x39, 0xf5, 0xcc, 0xdf, 0xdd,
	0x9c, 0xca, 0x30, 0xf3, 0xef, 0xb7, 0xa7, 0x61, 0x45, 0xf7, 0xb7, 0xc4, 0x77, 0x33, 0xd5, 0x66,
	0x59, 0xdd, 0x28, 0xa2, 0x08, 0xdc, 0x4c, 0xaa, 0xce, 0xe7, 0xa1, 0xa8, 0x73, 0x82, 0xae, 0x1b,
	0x1e, 0x39, 0xa5, 0xae, 0x4b, 0x12, 0x95, 0x4a, 0x45, 0x5a, 0x07, 0x3d, 0x07, 0xd2, 0x3b, 0xdc,
	0x4c, 0x35, 0x53, 0x3d, 0xa5, 0x9a, 0x91, 0x6e, 0x75, 0x2d, 0x29, 0x68, 0x6e, 0x9f, 0x5e, 0x47,
	0xac, 0x9f, 0x56, 0x47, 0xc4, 0x3e, 0x90, 0x2f, 0x24, 0xd6, 0x7e, 0x3a, 0x05, 0x45, 0x9d, 0xf3,
	0x62, 0x97, 0x48, 0xdd, 0xb9, 0x7c, 0x28, 0x97, 0xe8, 0x98, 0xcb, 0x16, 0x6d, 0xc5, 0x27, 0xdc,
	0x63, 0x54, 0xc5, 0x9b, 0xb9, 0xcd, 0xb4, 0x14, 0xb0, 0x99, 0xc8, 0x91, 0x05, 0x33, 0x23, 0xd6,
	0x37, 0xe7, 0x98, 0xfc, 0x89, 0x1a, 0x30, 0x8b, 0x55, 0x3f, 0x6e, 0x7c, 0x72, 0x75, 0xc2, 0x00,
	0x1a, 0x8a, 0x70, 0xb5, 0x6a, 0xde, 0xee, 0x36, 0x9a, 0x9d, 0xf6, 0xee, 0x8e, 0x63, 0x14, 0xd1,
	0x13, 0xb0, 0x64, 0x46, 0x90, 0xda, 0x47, 0x7d, 0x2b, 0x59, 0x8c, 0xc6, 0x10, 0xef, 0x22, 0xd7,
	0xa1, 0x1b, 0x5f, 0xc6, 0x83, 0xb5, 0xa0, 0xaf, 0xe4, 0xb3, 0x15, 0x8f, 0x53, 0xd3, 0xad, 0x6f,
	0xfc, 0xcd, 0xdb, 0x59, 0x30, 0x02, 0xf9, 0x50, 0xdf, 0x85, 0xb2, 0xfa, 0xd6, 0x19, 0x15, 0x42,
	0x3f, 0x07, 0x15, 0x35, 0x6c, 0x9f, 0x72, 0xdd, 0xf2, 0xe4, 0xff, 0xec, 0x27, 0x27, 0xb3, 0x69,
	0x40, 0xad, 0x59, 0xe6, 0x29, 0x51, 0xbd, 0x06, 0x15, 0x63, 0xd0, 0x74, 0x73, 0xaf, 0xc0, 0xe2,
	0x98, 0x4e, 0xee, 0xca, 0x78, 0x2a, 0x7f, 0x65, 0x3c, 0x1e, 0x78, 0xd3, 0x13, 0x02, 0xef, 0xda,
	0x65, 0x78, 0x24, 0x64, 0xbd, 0x0d, 0xcf, 0xdc, 0x1c, 0x6f, 0x78, 0xe1, 0x60, 0x18, 0x06, 0xb2,
	0xb2, 0xdc, 0x48, 0xfe, 0xa2, 0xef, 0x85, 0xfd, 0x9b, 0x33, 0x7b, 0x53, 0xff, 0x1b, 0x00, 0x00,
	0xff, 0xff, 0x44, 0xb0, 0x12, 0x50, 0xb6, 0x2f, 0x00, 0x00,
}
